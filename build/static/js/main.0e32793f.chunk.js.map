{"version":3,"sources":["serviceWorker.js","components/DashboardEmpty.js","shared/components/LayoutCellMenu.js","shared/components/LayoutCellHeader.js","shared/components/LayoutCell.js","shared/cells/CommandButton.js","shared/cells/Logger.js","shared/cells/Unknown.js","selectors/robot.js","selectors/router.js","selectors/config.js","selectors/websocket.js","shared/cells/View3D.js","actions/index.js","reducers/selectors.js","shared/cells/CellBase.js","shared/cells/JogCoordinate.js","shared/icons/Wifi.js","shared/cells/JogJoint.js","shared/cells/ManualMotionVel.js","shared/cells/RobotStatus.js","shared/cells/ManualSwitch.js","shared/cells/CodeEditor.js","shared/cells/Debugger.js","shared/containers/RealtimeChartChannelAndDataKey.js","shared/containers/RealtimeChartChannel.js","shared/cells/RealtimeChart.js","shared/cells/index.js","shared/components/Layout.js","shared/containers/LayoutRenderer.js","components/Dashboard.js","containers/DashboardPage.js","containers/ConfigurationPage.js","routes.js","components/Header.js","containers/App.js","reducers/robot.js","reducers/index.js","reducers/config.js","reducers/errors.js","store.js","services/api.js","services/index.js","sagas/config.js","sagas/websocket.js","sagas/index.js","index.js"],"names":["Boolean","window","location","hostname","match","DashboardEmpty","renderDashboard","_ref","getPrefixCls","_this$props","_this","props","prefixCls","dashboard","react_default","a","createElement","className","concat","config_provider","this","Component","MenuItem","Menu","Item","LayoutCellMenu","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleEditCell","onEdit","handleDeleteCell","onDelete","cell","i","handleCloneCell","_this$props2","onClone","objectSpread","editMenu","self","assertThisInitialized","menu","menu_default","onClick","e","key","dropdown_default","overlay","trigger","placement","overlayClassName","getPopupContainer","icon_default","type","renderMenu","_this$props3","customizePrefixCls","isEditable","state","subMenuIsOpen","LayoutCellHeader","renderLayoutCellHeader","cellPrefixCls","draggable","headerDraggable","extraClassname","classnames","cellName","headingBar","trim","react","LayoutCell","renderLayoutCell","onCloneCell","onCellUpdate","onDeleteCell","toggleVisType","children","ref","container","components_LayoutCellMenu","dataExists","visType","components_LayoutCellHeader","name","console","log","CommandButton","renderCommandButton","style","fontSize","Logger","renderLogger","Unknown","hashEqualSelectorCreator","createSelectorCreator","memoize","_len","arguments","length","args","Array","_key","reduce","acc","val","JSON","stringify","getResultByCell","robot","resultsByChannel","getResultByChannel","channel","getMemoizeResultByChannel","result","getMemoizeChannelNames","keys","getDataByChannelAndKey","isNumber","Date","id","getManualMotionVel","manualMotionVel","getMemoizeEndPE","createSelector","get","ai","di","end_pe","getMemoizeMotionPos","end_pq","motion_acc","motion_pos","getMemoizeMotionState","motion_state","getMemoizePartPQ","motion_toq","part_pq","getMemoizeUnityPartPQString","join","getMemoizeSlaveAlState","slave_al_state","getMemoizeSlaveOnlineState","slave_link_num","slave_online_state","getPathname","router","pathname","getFullDashboards","config","interfaceRoot","dashboards","getDashboards","map","d","editable","getDashboardAndCells","filter","getCurrentDashboardAndCells","indexOf","replace","getCurrentDashboard","getXml","xml","getWebsocketConnected","websocketConnected","getWsUrl","ws","url","getCommandSendInterval","_ref2","commandSendInterval","getGetInterval","_ref3","getInterval","getCommandSendDelay","_ref4","commandSendDelay","getUnityUpdateInterval","_ref5","unityUpdateInterval","View3D","Exports_default","unityContent","UnityContent","on","progression","setState","send","origin","throttleSend","throttle","bind","remove","nextProps","nextState","nextContext","_this2","partPQ","setTimeout","gameInstance","progress","Module","error","connect","cmdTimestamp","now","action","payload","undefined","LOAD_CONFIG","request","success","response","failure","UPDATE_DASHBOARD","dashboardUpdate","updateDashboard","CREATE_CELL","cellCreate","dashboardId","createCell","DELETE_CELL","cellDelete","cellId","UPDATE_ROUTER_STATE","NAVIGATE","START_WEBSOCKET","STOP_WEBSOCKET","SEND_CMD","CMD_RESPONSE","startWebsocket","wsConnected","wsDisconnected","wsError","sendCmd","cmd","getConfig","getStateCode","_ref7","state_code","getLayoutCols","_ref9","layoutConfig","cols","getLayoutRowHeight","_ref10","rowHeight","getLayoutMargin","_ref11","margin","getLayoutContainerPadding","_ref12","containerPadding","CellBase","interval","timeout","getSendCmdFn","getOnMouseDownFn","clearInterval","fn","setInterval","getOnMouseUpFn","clearTimeout","getOptions","options","o","value","updateOptions","toString","renderContent","Error","Option","Select","RadioGroup","Radio","Group","JogCoordinate","Input","mCoordinateRadio","mCoordinate","renderJogCoordinate","endPE","radioStyle","display","height","lineHeight","types","row_default","onChange","onMCoordinateChange","radio_default","select_default","handleSelectChange","disabled","index","button_default","size","vel","onMouseDown","onMouseUp","toFixed","target","propTypes","PropTypes","object","isRequired","func","number","array","Wifi","assign","width","viewBox","version","fillRule","x","y","JogJoint","renderJogJoint","slaveOnlineState","slaveAlState","motionState","motionPos","component","theme","ManualMotionVel","getVelOption","fo","parseFloat","renderManualMotionVel","option","slider_default","tooltipVisible","min","max","tipFormatter","updateManualMotionVel","copyCell","toConsumableArray","matched","forEach","push","getTooltipPopupContainer","document","getElementById","RobotStatus","stateCode","color","100","200","300","400","500","fill","ManualSwitch","robotStatus","Math","floor","switch_default","checkedChildren","unCheckedChildren","defaultChecked","CodeEditor","newValue","lib_default","mode","editorProps","$blockScrolling","TextArea","Debugger","command","split","terminal","runCommandOnActive","results","rows","placeholder","shape","icon","js_default","backgroundColor","barColor","hideTopBar","allowTabs","commands","showCmd","print","runCommand","slice","showResult","descriptions","getResultsByCell","cacheSize","cachedResults","splice","makeGetResultsByCell","RealtimeChartChannelAndDataKey","dataKey","data","title","text","xAxis","splitLine","show","yAxis","series","symbol","_echarts_for_react_2_0_15_beta_0_echarts_for_react_lib_default","notMerge","lazyUpdate","getCachedDataByChannelAndKey","makeGetCachedDataByChannelAndKey","RealtimeChartChannel","handleSelect","dataKeys","onSelect","c","RealtimeChartChannel_Option","toUpperCase","containers_RealtimeChartChannelAndDataKey","getDataKeysByChannel","isArray","r","makeGetDataKeysByChannel","RealtimeChart","handleChange","channels","RealtimeChart_Option","containers_RealtimeChartChannel","shared_cells","3DView","CellByTypes","Layout","renderLayout","components_LayoutCell","renderLayoutBody","cellByTypes","toLowerCase","CellComponent","Layout_Unknown","GridLayout","WidthProvider","ReactGridLayout","LayoutRenderer","handleLayoutChange","layout","onPositionChange","changed","newCells","cells","l","find","ly","h","w","newLayout","renderLayoutRender","onZoom","layoutCols","layoutMargin","layoutContainerPadding","layoutRowHeight","windowHeight","draggableCls","rowCount","useCSSTransforms","onLayoutChange","draggableHandle","isDraggable","isResizable","components_Layout","Dashboard","_this$props$size","containers_LayoutRenderer","windowWidth","templates","manualRefresh","components_DashboardEmpty","onAddCell","withSize","monitorHeight","DashboardPage","deleteCell","components_Dashboard","inPresentationMode","onSummonOverlayTechnologies","timeRange","setScrollTop","inView","params","ConfigurationPage","routes","react_router","exact","path","Header","handleClick","navigate","onCreateCell","toggleLock","selectedKeys","Header_MenuItem","position","right","top","App","renderApp","components_Header","renderErrorMessage","handleDismissClick","getData","loadConfig","updateRouterState","intervalTimer","stopWebsocket","resetErrorMessage","preventDefault","nextValue","errorMessage","padding","href","requiredFields","stopped","initialState","websocketError","channelsById","analyzeBotData","buffer","channelsByID","anyRobot","dataView","DataView","cmdCode","getInt32","getFloat64","str","out","len","char2","char3","String","fromCharCode","utf8ArrayToStr","Uint8Array","parse","cmd_response_time","rootReducer","combineReducers","ActionTypes","errors","errorType","actions","model","composeEnhancers","compose","fetchConfig","fetch","then","json","ok","Promise","reject","message","endpoint","method","headers","Content-Type","body","defaultDashboards","api","_api","history","createBrowserHistory","watchUpdateDashboard","watchCreateCell","watchLoadConfig","watchDeleteCell","regenerator_default","wrap","_context","prev","next","put","sent","stop","_marked","_context2","delay","select","isEmpty","some","hasOwnProperty","_marked2","_context3","_marked3","_ref6","_context4","_marked4","_ref8","_context5","_marked5","_context6","takeLatest","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","sagas_config","fork","internalListener","externalListener","reconnect","websocketSaga","strArray","cmd_id","parseInt","cmd_option","cmd_code","res_2","res_3","mes_length","ArrayBuffer","headView","setInt32","setFloat64","setUint8","charCodeAt","createWebSocketConnection","resolve","socket","WebSocket","onopen","binaryType","onerror","evt","createSocketChannel","eventChannel","emit","onmessage","event","onclose","take","t0","readyState","CONNECTING","OPEN","CLOSING","CLOSED","abrupt","websocket_marked","finish","websocket_marked2","websocket_marked3","socketChannel","cancel","_cancel","race","internal","external","close","websocket_marked4","websocket","watchNavigate","root","sagas_marked3","all","configSaga","sagas_marked4","store","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","runSaga","run","dispatch","END","configureStore","rootSaga","render","es","config_provider_default","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e32793f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. ConfigurationPage is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\n\nimport {ConfigConsumer} from 'antd/lib/config-provider'\n\nclass DashboardEmpty extends Component {\n  renderDashboard = ({getPrefixCls}) => {\n    let {dashboard,  prefixCls: customizePrefixCls } = this.props\n    const prefixCls = getPrefixCls('dashboard-empty', customizePrefixCls);\n    return <div\n      className={`${prefixCls}`}\n    >\n      当前面板没有任何功能单元\n    </div>\n  }\n\n  render(){\n    return <ConfigConsumer>{this.renderDashboard}</ConfigConsumer>\n  }\n}\n\nDashboardEmpty.propTypes = {\n  dashboard: PropTypes.object.isRequired,\n  onAddCell: PropTypes.func.isRequired,\n}\n\nexport default DashboardEmpty\n","import React, {Component, Fragment} from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\nimport Menu from 'antd/lib/menu'\nimport Dropdown from 'antd/lib/dropdown'\nimport Icon from 'antd/lib/icon'\nconst MenuItem = Menu.Item\n\nclass LayoutCellMenu extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      subMenuIsOpen: false,\n    }\n  }\n\n  handleEditCell = () => {\n    const {onEdit} = this.props\n    onEdit()\n  }\n\n  handleDeleteCell = () => {\n    const {onDelete, cell} = this.props\n    onDelete(cell.i)\n  }\n\n  handleCloneCell = () => {\n    let {onClone, cell} = this.props\n    cell = {...cell}\n    cell['y'] = cell['y'] + 1\n    onClone(cell)\n  }\n\n  editMenu = (prefixCls) => {\n    const self = this\n    const menu = <Menu onClick={(e)=>{\n      switch (e.key) {\n        case 'configure':\n          self.handleEditCell()\n          break\n        case 'clone':\n          self.handleCloneCell()\n          break\n        case 'delete':\n          self.handleDeleteCell()\n          break\n        default:\n          break\n      }\n    }}>\n      <MenuItem key=\"configure\">\n        Configure\n      </MenuItem>\n      <MenuItem key=\"clone\">\n        Clone\n      </MenuItem>\n      <MenuItem key=\"delete\">\n        Delete\n      </MenuItem>\n    </Menu>\n    return <Dropdown\n      overlay={menu}\n      trigger={['click']}\n      placement={'bottomRight'}\n      className={`${prefixCls}--button`}\n      overlayClassName={`${prefixCls}--dropdown-menu`}\n      getPopupContainer={self.props.getPopupContainer}\n    >\n      <Icon type=\"edit\" />\n    </Dropdown>\n  }\n\n  renderMenu = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      isEditable,\n    } = this.props\n    if (!isEditable) {\n      return\n    }\n    const prefixCls = getPrefixCls('layout-cell-context', customizePrefixCls);\n    return <div\n      className={`${prefixCls}`}\n    >\n      {this.editMenu(prefixCls)}\n    </div>\n  }\n\n  render(){\n    return <ConfigConsumer>{this.renderMenu}</ConfigConsumer>\n  }\n}\n\nLayoutCellMenu.propTypes = {\n  cell: PropTypes.object.isRequired,\n  isEditable: PropTypes.bool.isRequired,\n  getPopupContainer: PropTypes.func.isRequired,\n  dataExists: PropTypes.bool.isRequired,\n  // onEdit: PropTypes.func.isRequired,\n  onClone: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  toggleVisType: PropTypes.func.isRequired,\n  visType: PropTypes.string.isRequired,\n}\n\nexport default LayoutCellMenu","import React, {Component, Fragment} from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport classnames from 'classnames'\nimport PropTypes from \"prop-types\";\n\nclass LayoutCellHeader extends Component {\n\n  renderLayoutCellHeader = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      isEditable,\n    } = this.props\n    const prefixCls = getPrefixCls('layout-cell-header', customizePrefixCls);\n    const cellPrefixCls = getPrefixCls('layout-cell', customizePrefixCls);\n    const draggable= `${cellPrefixCls}--draggable`\n    const headerDraggable= `${prefixCls}--draggable`\n    const extraClassname = {}\n    extraClassname[draggable] = isEditable\n    extraClassname[headerDraggable] = isEditable\n    return <div\n      className={classnames(`${prefixCls}`, { ...extraClassname })}\n    >\n        {this.cellName(prefixCls)}\n        {this.headingBar(prefixCls)}\n    </div>\n  }\n\n  cellName = (prefixCls) => {\n    const {\n      cellName,\n    } = this.props\n    const isDefault= `${prefixCls}-name__default`\n    const extraClassname = {}\n    extraClassname[isDefault] = !cellName || cellName.trim() === ''\n    const className = classnames(`${prefixCls}-name`, {...extraClassname})\n    return (\n      <span className={className}>\n        {cellName || '未命名'}\n      </span>\n    )\n  }\n\n  headingBar = (prefixCls) => {\n    const {isEditable} = this.props\n    if (isEditable) {\n      return (\n        <Fragment>\n          <div className={`${prefixCls}--header-bar`} />\n          <div className={`${prefixCls}--header-dragger`} />\n        </Fragment>\n      )\n    }\n  }\n\n  render(){\n    return <ConfigConsumer>{this.renderLayoutCellHeader}</ConfigConsumer>\n  }\n}\n\nLayoutCellHeader.propTypes = {\n  cellName: PropTypes.string,\n  isEditable: PropTypes.bool.isRequired,\n  // makeSpaceForCellNote: PropTypes.bool.isRequired,\n  // cellBackgroundColor: PropTypes.string.isRequired,\n  // cellTextColor: PropTypes.string.isRequired,\n}\n\nexport default LayoutCellHeader","import React, {Component, Fragment} from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\nimport LayoutCellMenu from \"./LayoutCellMenu\";\nimport LayoutCellHeader from \"./LayoutCellHeader\";\n\nclass LayoutCell extends Component {\n\n  renderLayoutCell = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      isEditable,\n      cell,\n      onCloneCell,\n      onCellUpdate,\n      onDeleteCell,\n      toggleVisType,\n      children,\n    } = this.props\n    const self = this\n    const prefixCls = getPrefixCls('layout-cell', customizePrefixCls);\n    return <div\n      className={`${prefixCls}`}\n      ref={(ref)=>{self.container=ref}}\n    >\n      <LayoutCellMenu\n        cell={cell}\n        isEditable={isEditable}\n        dataExists={false}\n        onClone={onCloneCell}\n        onDelete={onDeleteCell}\n        onCellUpdate={onCellUpdate}\n        toggleVisType={toggleVisType}\n        visType={''}\n        getPopupContainer={()=>{\n          return self.container\n        }}\n      />\n      <LayoutCellHeader cellName={cell.name} isEditable={isEditable} />\n      <div className={`${prefixCls}-body`}>{children}</div>\n    </div>\n  }\n\n  render(){\n    console.log('LayoutCell render()')\n    return <ConfigConsumer>{this.renderLayoutCell}</ConfigConsumer>\n  }\n}\n\nLayoutCell.propTypes = {\n  cell: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n  onDeleteCell: PropTypes.func.isRequired,\n  onCellUpdate: PropTypes.func.isRequired,\n  onCloneCell: PropTypes.func.isRequired,\n  toggleVisType: PropTypes.func.isRequired,\n  isEditable: PropTypes.bool.isRequired,\n}\n\nexport default LayoutCell","import React, {Component, Fragment} from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\nimport Icon from \"antd/lib/icon\"\n\nclass CommandButton extends Component {\n\n  renderCommandButton = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      cell,\n    } = this.props\n    const prefixCls = getPrefixCls('command-button', customizePrefixCls);\n    return <div\n      className={`${prefixCls}`}\n    >\n      <Icon type=\"deployment-unit\" style={{fontSize:50}}/>\n    </div>\n  }\n\n  render(){\n    return <ConfigConsumer>{this.renderCommandButton}</ConfigConsumer>\n  }\n}\n\nCommandButton.propTypes = {\n  cell: PropTypes.object.isRequired,\n}\n\nexport default CommandButton","import React, {Component, Fragment} from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\nimport Icon from \"antd/lib/icon\"\n\nclass Logger extends Component {\n\n  renderLogger = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      cell,\n    } = this.props\n    const prefixCls = getPrefixCls('logger', customizePrefixCls);\n    return <div\n      className={`${prefixCls}`}\n    >\n      <Icon type=\"area-chart\" style={{fontSize:50}}/>\n    </div>\n  }\n\n  render(){\n    return <ConfigConsumer>{this.renderLogger}</ConfigConsumer>\n  }\n}\n\nLogger.propTypes = {\n  cell: PropTypes.object.isRequired,\n}\n\nexport default Logger","import React, {Component, Fragment} from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\n\nclass Unknown extends Component {\n\n  renderLogger = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      cell,\n    } = this.props\n    const prefixCls = getPrefixCls('unknown-cell-type', customizePrefixCls);\n    return <div\n      className={`${prefixCls}`}\n    >\n      <div>不支持的组件类 {cell.type}</div>\n    </div>\n  }\n\n  render(){\n    return <ConfigConsumer>{this.renderLogger}</ConfigConsumer>\n  }\n}\n\nUnknown.propTypes = {\n  cell: PropTypes.object.isRequired,\n}\n\nexport default Unknown","import { createSelector, createSelectorCreator } from 'reselect'\nimport memoize from 'lodash/memoize'\nimport isNumber from 'lodash/isNumber'\nimport isArray from 'lodash/isArray'\n\nconst hashFn = (...args) => {\n  return args.reduce(\n    (acc, val) => acc + '-' + JSON.stringify(val),\n    ''\n  )\n}\nconst hashEqualSelectorCreator = createSelectorCreator(memoize, hashFn)\n\n\nexport const getResultByCell = (state, props) => state.robot.resultsByChannel[props.cell.i]\nexport const getResultByChannel = (state, channel) => state.robot.resultsByChannel[channel]\nexport const getMemoizeResultByCell = hashEqualSelectorCreator(\n  getResultByCell,\n  (result)=>result\n)\nexport const getMemoizeResultByChannel = hashEqualSelectorCreator(\n  getResultByChannel,\n  (result)=>result\n)\n\nexport const getChannelNames = state => Object.keys(state.robot.resultsByChannel)\nexport const getMemoizeChannelNames = hashEqualSelectorCreator(\n  getChannelNames,\n  (result)=>result\n)\n\nexport const makeGetDataKeysByChannel = () =>{\n  const getDataKeysByChannel = createSelector(\n    getMemoizeResultByChannel,\n    result => {\n      if(result){\n        return Object.keys(result).filter(key=>{\n          if(isNumber(result[key])){\n            return true\n          }\n          if(isArray(result[key]) && isNumber(result[key][0])){\n            return true\n          }\n        })\n      }\n    }\n  )\n  return hashEqualSelectorCreator(\n    getDataKeysByChannel,\n    r=>r\n  )\n}\nexport const getDataByChannelAndKey = (state, channel, key) => {\n  const result = getResultByChannel(state, channel)\n  if(result && result[key]){\n    if(isNumber(result[key])){\n      return [new Date(result.id), [result[key]]]\n    }else{\n      return [new Date(result.id), result[key]]\n    }\n  }\n}\nexport const makeGetCachedDataByChannelAndKey = (cacheSize=10000) =>{\n  let cachedResults = []\n  return hashEqualSelectorCreator(\n    getDataByChannelAndKey,\n    result=>{\n      console.log(result)\n      if(result){\n        cachedResults.push(result)\n      }\n      let length = cachedResults.length;\n      if(length > cacheSize){\n        cachedResults.splice( 0, length - cacheSize);\n      }\n      return [...cachedResults]\n    }\n  )\n}\n\n\nexport const makeGetResultsByCell = (cacheSize=10000) => {\n  let cachedResults = []\n  return createSelector(\n    getResultByCell,\n    (result)=>{\n      if(result){\n        cachedResults.push(result)\n      }\n      let length = cachedResults.length;\n      if(length > cacheSize){\n        cachedResults.splice( 0, length - cacheSize);\n      }\n      return cachedResults\n    }\n  )\n}\n\nexport const getManualMotionVel = state => state.robot.manualMotionVel\n\nexport const makeGetResultsByChannel = (cacheSize=10000) => {\n  let cachedResults = []\n  return createSelector(\n    getResultByCell,\n    (result)=>{\n      if(result){\n        cachedResults.push(result)\n      }\n      let length = cachedResults.length;\n      if(length > cacheSize){\n        cachedResults.splice( 0, length - cacheSize);\n      }\n      return cachedResults\n    }\n  )\n}\n\nexport const getGetChannel = state => state.robot.resultsByChannel.get\n\n\nconst getAI = state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.ai\nexport const getMemoizeAI = createSelector(\n  getAI,\n  (ai)=>ai\n)\n\nconst getDI = state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.di\nexport const getMemoizeDI = createSelector(\n  getDI,\n  (di)=>di\n)\n\nconst getEndPE = state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.end_pe\nexport const getMemoizeEndPE = hashEqualSelectorCreator(\n  getEndPE,\n  (end_pe)=>end_pe\n)\n\nconst getEndPQ = state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.end_pq\nexport const getMemoizeEndPQ = createSelector(\n  getEndPQ,\n  (end_pq)=>end_pq\n)\n\nconst getMotionAcc = state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.motion_acc\nexport const getMemoizeMotionAcc = createSelector(\n  getMotionAcc,\n  (motion_acc)=>motion_acc\n)\n\nconst getMotionPos = state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.motion_pos\nexport const getMemoizeMotionPos = hashEqualSelectorCreator(\n  getMotionPos,\n  (motion_pos)=>motion_pos\n)\n\nconst getMoitionState = state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.motion_state\nexport const getMemoizeMotionState = hashEqualSelectorCreator(\n  getMoitionState,\n  (motion_state)=>motion_state\n)\n\nexport const getPartToq= state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.motion_toq\nexport const getMemoizeMotionToq = hashEqualSelectorCreator(\n  getPartToq,\n  (motion_toq)=>motion_toq\n)\n\nexport const getMotionVel = state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.motion_vel\n\n\nexport const getPartPQ = state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.part_pq\nexport const getMemoizePartPQ = hashEqualSelectorCreator(\n  getPartPQ,\n  (part_pq)=>part_pq\n)\nexport const getMemoizeUnityPartPQString = hashEqualSelectorCreator(\n  getMemoizePartPQ,\n  (part_pq)=>part_pq && part_pq.join('&')\n)\n\nexport const getReturnCode = state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.return_code\n\nexport const getSlaveAlState = state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.slave_al_state\n\nexport const getMemoizeSlaveAlState = createSelector(\n  getSlaveAlState,\n  (slave_al_state)=>slave_al_state\n)\n\nexport const getSlaveLinkNum = state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.slave_link_num\n\nexport const getMemoizeSlaveLinkNum = hashEqualSelectorCreator(\n  getSlaveLinkNum,\n  (slave_link_num)=>slave_link_num\n)\n\nexport const getSlaveOnlineState = state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.slave_online_state\n\nexport const getMemoizeSlaveOnlineState = hashEqualSelectorCreator(\n  getSlaveOnlineState,\n  (slave_online_state)=>slave_online_state\n)\n\nexport const getStateCode = state => state.robot.resultsByChannel.get && state.robot.resultsByChannel.get.state_code\n\n","export const getPathname = state => state.router.pathname","import { createSelector } from 'reselect'\nimport { getPathname } from \"./router\";\n\n\nconst getInterfaceRoot = (state) => state.config.interfaceRoot\n\nconst getFullDashboards = createSelector(\n  getInterfaceRoot,\n  (interfaceRoot)=>interfaceRoot && interfaceRoot.dashboards\n)\n\nexport const getDashboards = createSelector(\n  getFullDashboards,\n  dashboards=> dashboards && dashboards.map(d=>({\n    name: d.name,\n    i: d.i,\n    editable: d.editable\n  }))\n)\n\nexport const getDashboardAndCells = (state, id) => {\n  const dashboards = getFullDashboards(state)\n  if (dashboards) {\n    return dashboards.filter(d=>d.i === id)[0]\n  }\n}\n\nexport const makeGetDashboard = (id) =>{\n  return createSelector(\n    getDashboards,\n    dashboards=>dashboards && dashboards.filter(d=>d.i === id)[0]\n  )\n}\n\nexport const getCurrentDashboardAndCells = createSelector(\n  getFullDashboards,\n  getPathname,\n  (dashboards, pathname) => {\n    if(pathname !== '/' && pathname.indexOf('/dashboards/') !== -1){\n      const id = pathname.replace(\"/dashboards/\", \"\")\n      const dashboard = dashboards && dashboards.filter(d=>d.i === id)[0]\n      if(dashboard) {\n        return dashboard\n      }\n    }\n    return dashboards && dashboards[0]\n  }\n)\n\nexport const getCurrentDashboardId = createSelector(\n  getDashboards,\n  getPathname,\n  (dashboards, pathname) => {\n    if(pathname !== '/' && pathname.indexOf('/dashboards/') !== -1){\n      const id = pathname.replace(\"/dashboards/\", \"\")\n      const dashboard = dashboards && dashboards.filter(d=>d.i === id)[0]\n      if(dashboard) {\n        return dashboard.i\n      }\n    }\n    return dashboards && dashboards[0].i\n  }\n)\n\nexport const getCurrentDashboard = createSelector(\n  getDashboards,\n  getPathname,\n  (dashboards, pathname) => {\n    if(pathname !== '/' && pathname.indexOf('/dashboards/') !== -1){\n      const id = pathname.replace(\"/dashboards/\", \"\")\n      const dashboard = dashboards && dashboards.filter(d=>d.i === id)[0]\n      if(dashboard) {\n        return dashboard\n      }\n    }\n    return dashboards && dashboards[0]\n  }\n)\n\nexport const getXml = ({config:{xml}}) => xml\n","import { createSelector, createSelectorCreator } from 'reselect'\nimport memoize from 'lodash/memoize'\n\nexport const getWebsocketConnected = state=>state.robot.websocketConnected\n\nexport const getWsUrl = ({config}) => config.interfaceRoot && config.interfaceRoot.ws && config.interfaceRoot.ws.url\nexport const getCommandSendInterval = ({config}) => config.interfaceRoot && config.interfaceRoot.ws && config.interfaceRoot.ws.commandSendInterval\nexport const getGetInterval = ({config}) => config.interfaceRoot && config.interfaceRoot.ws && config.interfaceRoot.ws.getInterval\nexport const getCommandSendDelay = ({config}) => config.interfaceRoot && config.interfaceRoot.ws && config.interfaceRoot.ws.commandSendDelay\nexport const getUnityUpdateInterval = ({config}) => config.interfaceRoot && config.interfaceRoot.ws && config.interfaceRoot.ws.unityUpdateInterval\n","import React, {Component, Fragment} from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux'\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nimport throttle from 'lodash/throttle'\n\nimport {getMemoizeUnityPartPQString, getUnityUpdateInterval, getXml} from \"../../selectors\";\n\nclass View3D extends Component {\n  constructor(props){\n    super(props)\n    this.unityContent = new UnityContent(\n      \"/unity/8.json\",\n      \"/unity/UnityLoader.js\"\n    );\n    this.state = {}\n    this.unityContent.on(\"progress\", progression => {\n      this.setState({\n        progression: progression\n      });\n      if(progression === 1){\n        this.unityContent.send(\"empt\", \"GetUrlFromJs\", window.location.origin + '/')\n        this.unityContent.send(\"empt\", \"GetRobotXmlFromJS\", this.props.xml)\n        this.unityContent.send(\"empt\", \"SetCameraBackGround\", \"0&0&0\")\n        this.unityContent.send(\"empt\", \"SetFPS\", \"20\");\n      }\n    });\n    console.log('unityUpdateInterval', this.props.unityUpdateInterval)\n    this.throttleSend = throttle(this.unityContent.send.bind(this.unityContent), this.props.unityUpdateInterval)\n  }\n\n  componentWillUnmount() {\n    this.unityContent.remove(\"progress\")\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    if(nextProps.xml !== this.props.xml){\n      if(this.state.progression === 1){\n        this.unityContent.send(\"empt\", \"GetRobotXmlFromJS\", nextProps.xml)\n      }\n    }\n    if(nextProps.partPQ !== this.props.partPQ && nextProps.partPQ){\n      if(this.state.progression === 1){\n        setTimeout(()=>{\n          this.throttleSend(\"empt\", \"ReceiveDataFromJs\", nextProps.partPQ)\n        },0)\n      }\n    }\n    return false\n  }\n\n  unityProgress(gameInstance, progress) {\n    if (!gameInstance.Module) {\n      return;\n    }\n    this.setState({progress: gameInstance.progress})\n  }\n\n  componentDidMount() {\n    console.error('View3D componentDidMount()')\n  }\n\n  renderLogger = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      cell,\n    } = this.props\n    const prefixCls = getPrefixCls('view3d', customizePrefixCls);\n    return <div\n      className={`${prefixCls}`}\n      ref={ref=>this.container=ref}\n    >\n      <Unity unityContent={this.unityContent} />\n    </div>\n  }\n\n  render(){\n    console.error('View3D render()')\n    return <ConfigConsumer>{this.renderLogger}</ConfigConsumer>\n  }\n}\n\nView3D.propTypes = {\n  cell: PropTypes.object.isRequired,\n  xml: PropTypes.string.isRequired,\n}\n\nfunction mapStateToProps(state) {\n  return {\n    xml: getXml(state),\n    partPQ: getMemoizeUnityPartPQString(state),\n    unityUpdateInterval: getUnityUpdateInterval(state)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n)(View3D)\n\n","let cmdTimestamp = Date.now()\n\nfunction action(type, payload = {}) {\n  return {type, ...payload}\n}\n\nexport const LOAD_CONFIG = 'LOAD_CONFIG'\nexport const CONFIG_FETCH_REQUEST = 'CONFIG_FETCH_REQUEST'\nexport const CONFIG_FETCH_FAILURE = 'CONFIG_FETCH_FAILURE'\nexport const CONFIG_FETCH_SUCCESS = 'CONFIG_FETCH_SUCCESS'\nexport const config = {\n  request: () => action(CONFIG_FETCH_REQUEST, {}),\n  success: (response) => action(CONFIG_FETCH_SUCCESS, {response}),\n  failure: (error) => action(CONFIG_FETCH_FAILURE, {error}),\n}\nexport const loadConfig = (requiredFields = []) => action(LOAD_CONFIG, {requiredFields})\n\n\nexport const UPDATE_DASHBOARD = 'UPDATE_DASHBOARD'\nexport const DASHBOARD_UPDATE_REQUEST = 'DASHBOARD_UPDATE_REQUEST'\nexport const DASHBOARD_UPDATE_FAILURE = 'DASHBOARD_UPDATE_FAILURE'\nexport const DASHBOARD_UPDATE_SUCCESS = 'DASHBOARD_UPDATE_SUCCESS'\nexport const dashboardUpdate = {\n  request: (dashboard) => action(DASHBOARD_UPDATE_REQUEST, {dashboard}),\n  success: (dashboard) => action(DASHBOARD_UPDATE_SUCCESS, {dashboard}),\n  failure: (error) => action(DASHBOARD_UPDATE_FAILURE, {error}),\n}\nexport const updateDashboard = (dashboard) => action(UPDATE_DASHBOARD, {dashboard})\n\n\nexport const CREATE_CELL = 'CREATE_CELL'\nexport const CELL_CREATE_REQUEST = 'CELL_CREATE_REQUEST'\nexport const CELL_CREATE_FAILURE = 'CELL_CREATE_FAILURE'\nexport const CELL_CREATE_SUCCESS = 'CELL_CREATE_SUCCESS'\nexport const cellCreate = {\n  request: (dashboardId) => action(CELL_CREATE_REQUEST, {dashboardId}),\n  success: (dashboardId, cell) => action(CELL_CREATE_SUCCESS, {dashboardId, cell}),\n  failure: (error) => action(CELL_CREATE_FAILURE, {error}),\n}\nexport const createCell = (dashboardId, cell) => action(CREATE_CELL, {dashboardId, cell})\n\nexport const DELETE_CELL = 'DELETE_CELL'\nexport const CELL_DELETE_REQUEST = 'CELL_DELETE_REQUEST'\nexport const CELL_DELETE_FAILURE = 'CELL_DELETE_FAILURE'\nexport const CELL_DELETE_SUCCESS = 'CELL_DELETE_SUCCESS'\nexport const cellDelete = {\n  request: (dashboardId, cellId) => action(CELL_DELETE_REQUEST, {dashboardId, cellId}),\n  success: (dashboardId, cell) => action(CELL_DELETE_SUCCESS, {dashboardId, cell}),\n  failure: (error) => action(CELL_DELETE_FAILURE, {error}),\n}\nexport const deleteCell = (dashboardId, cellId) => action(DELETE_CELL, {dashboardId, cellId})\n\n\nexport const UPDATE_ROUTER_STATE = 'UPDATE_ROUTER_STATE'\nexport const NAVIGATE =  'NAVIGATE'\nexport const RESET_ERROR_MESSAGE = 'RESET_ERROR_MESSAGE'\nexport const RESET_LOADING_MESSAGE = 'RESET_LOADING_MESSAGE'\n\nexport const navigate = pathname => action(NAVIGATE, {pathname})\nexport const resetErrorMessage = () => action(RESET_ERROR_MESSAGE)\nexport const updateRouterState = state => action(UPDATE_ROUTER_STATE, {state})\n\nexport const START_WEBSOCKET = 'START_WEBSOCKET'\nexport const STOP_WEBSOCKET = 'STOP_WEBSOCKET'\nexport const SEND_CMD = 'SEND_CMD'\nexport const CMD_RESPONSE = 'CMD_RESPONSE'\nexport const WEBSOCKET_CONNECTED = 'WEBSOCKET_CONNECTED'\nexport const WEBSOCKET_DISCONNECTED = 'WEBSOCKET_DISCONNECTED'\nexport const WEBSOCKET_ERROR = 'WEBSOCKET_ERROR'\nexport const startWebsocket = (url) => action(START_WEBSOCKET,{url})\nexport const stopWebsocket = () => action(STOP_WEBSOCKET, {stopped:true})\nexport const wsConnected = () => action(WEBSOCKET_CONNECTED)\nexport const wsDisconnected = () => action(WEBSOCKET_DISCONNECTED)\nexport const wsError = (error) => action(WEBSOCKET_ERROR, {error})\nexport const sendCmd = (cmd, channel) => {\n  let now = Date.now()\n  if(now <= cmdTimestamp){\n    cmdTimestamp = cmdTimestamp + 1\n  }else{\n    cmdTimestamp = now\n  }\n  return action(SEND_CMD, {cmd, id:cmdTimestamp, channel})\n}\n\nexport const UPDATE_MANUAL_MOTION_VEL = \"UPDATE_MANUAL_MOTION_VEL\"\nexport const updateManualMotionVel = (vel) => action(UPDATE_MANUAL_MOTION_VEL, {vel})\n","export const getConfig = ({config}) => config\n\nexport const getDashboards = ({config}) => config.interfaceRoot && config.interfaceRoot.dashboards\n\nexport const getDashboard  = ({config, router:{pathname}}) => {\n  if(config.interfaceRoot && config.interfaceRoot.dashboards){\n    if(pathname === '/' || pathname.indexOf('/dashboards/') === -1){\n      return config.interfaceRoot.dashboards[0]\n    }else{\n      let id = pathname.replace(\"/dashboards/\", \"\")\n      let fds = config.interfaceRoot.dashboards.filter(d=>d.i === id)\n      if(fds.length>0){\n        return fds[0]\n      }else{\n        return config.interfaceRoot.dashboards[0]\n      }\n    }\n  }\n}\n\n\nexport const getDashboardCells = (state, id) => {\n  let dashboard = getDashboard(state, id)\n  if(!dashboard){\n    return []\n  }else{\n    return dashboard.cells || []\n  }\n}\n\nexport const getPartPQ = ({robot}) => robot.resultsByChannel && robot.resultsByChannel.get && robot.resultsByChannel.get.part_pq\nexport const getPartPE = ({robot}) => robot.resultsByChannel && robot.resultsByChannel.get && robot.resultsByChannel.get.part_pe\nexport const getMotionPos = ({robot}) => robot.resultsByChannel && robot.resultsByChannel.get && robot.resultsByChannel.get.motion_pos\n\nexport const getStateCode = ({robot}) => robot.resultsByChannel && robot.resultsByChannel.get && robot.resultsByChannel.get.state_code\n\nexport const getModel = ({config:{model}}) => model\n\nexport const getLayoutCols = ({config})=>config.interfaceRoot && config.interfaceRoot.layoutConfig && config.interfaceRoot.layoutConfig.cols\nexport const getLayoutRowHeight = ({config})=>config.interfaceRoot && config.interfaceRoot.layoutConfig && config.interfaceRoot.layoutConfig.rowHeight\nexport const getLayoutMargin = ({config})=>config.interfaceRoot && config.interfaceRoot.layoutConfig && config.interfaceRoot.layoutConfig.margin\nexport const getLayoutContainerPadding = ({config})=>config.interfaceRoot && config.interfaceRoot.layoutConfig && config.interfaceRoot.layoutConfig.containerPadding\n","import React, {Component} from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\n\nclass CellBase extends Component {\n  interval = null\n  timeout = null\n  componentDidMount() {\n    console.log(\"CellBase Mount()\")\n  }\n  sendCmd = (cmd, channel) => {\n    let {sendCmd, cell} = this.props\n    sendCmd(cmd, channel || cell.i)\n  }\n  getSendCmdFn = (cmd, channel) => {\n    return (()=>{\n      this.sendCmd(cmd, channel)\n    }).bind(this)\n  }\n  getOnMouseDownFn = (cmd, channel) => {\n    return (()=>{\n      if(this.interval){\n        clearInterval(this.interval)\n      }\n      const {commandSendInterval, commandSendDelay} = this.props\n      let fn = this.sendCmd.bind(this, cmd, channel)\n      let self = this\n      self.timeout = setTimeout(()=>{\n        self.interval = setInterval(fn, commandSendInterval)\n      }, commandSendDelay)\n    }).bind(this)\n  }\n  getOnMouseUpFn = () => {\n    return (()=>{\n      if(this.timeout){\n        clearTimeout(this.timeout)\n      }\n      if(this.interval){\n        clearInterval(this.interval)\n      }\n    }).bind(this)\n  }\n  getOptions = () => {\n    let {cell} = this.props\n    if(!cell.options || cell.options.length === 0){\n      return {}\n    }else{\n      return cell.options.reduce((options, o)=>{\n        options[o.name] = o.value\n        return options\n      },{})\n    }\n  }\n  updateOptions = options => {\n    let cell = {...this.props.cell}\n    cell.options = Object.keys(options).map(key=>{\n      return {name: key, value: options[key].toString()}\n    })\n    this.props.onCellUpdate(cell)\n  }\n\n  renderContent = () => {\n    throw new Error(\"renderComponent not implemented\")\n  }\n\n  render(){\n    console.log('CellBase render()')\n    return <ConfigConsumer>{this.renderContent}</ConfigConsumer>\n  }\n}\n\nCellBase.propTypes = {\n  cell: PropTypes.object.isRequired,\n  sendCmd: PropTypes.func.isRequired,\n  onCellUpdate: PropTypes.func.isRequired,\n  commandSendInterval: PropTypes.number.isRequired,\n  commandSendDelay: PropTypes.number.isRequired\n}\n\nexport default CellBase\n\n","import React from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\nimport Radio from \"antd/lib/radio\"\nimport Row from \"antd/lib/row\"\nimport Select from \"antd/lib/select\"\nimport Button from \"antd/lib/button\"\nimport InputNumber  from 'antd/lib/input-number'\nimport Input  from 'antd/lib/input'\nimport { connect } from 'react-redux'\nimport {\n  sendCmd\n} from '../../actions'\nimport {getMotionPos} from \"../../reducers/selectors\";\nimport CellBase from \"./CellBase\";\nimport {getMemoizeEndPE, getManualMotionVel} from \"../../selectors\";\nconst {Option} = Select\nconst RadioGroup = Radio.Group\nconst InputGroup = Input.Group\n\nclass JogCoordinate extends CellBase {\n  state={\n    mCoordinateRadio:0,\n    mCoordinate:0,\n  }\n  onMCoordinateChange(e){\n    let mCoordinate = this.state.mCoordinate\n    if(e.target.value === 0){\n      mCoordinate = 0\n    }else if(mCoordinate === 0){\n      mCoordinate = e.target.value\n    }\n    this.setState({\n      mCoordinateRadio: e.target.value,\n      mCoordinate,\n    });\n  }\n  handleSelectChange(value){\n    this.setState({\n      mCoordinate: value,\n    });\n  }\n  renderJogCoordinate = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      endPE,\n      cell,\n    } = this.props\n    const prefixCls = getPrefixCls('jog-coordinate', customizePrefixCls);\n    const radioStyle = {\n      display: 'block',\n      height: '30px',\n      lineHeight: '30px',\n    };\n    const names = ['X', 'Y', 'Z', 'RX', 'RY', 'RZ']\n    const types = ['x', 'y', 'z', 'rx', 'ry', 'rz']\n    return <div\n      className={`${prefixCls}`}\n    >\n      <Row>\n        <RadioGroup onChange={this.onMCoordinateChange.bind(this)} value={this.state.mCoordinateRadio}>\n          <Radio style={radioStyle} value={0}>\n            世界坐标系\n          </Radio>\n          <Radio style={radioStyle} value={1}>\n            <Select\n              onChange={this.handleSelectChange.bind(this)}\n              value={!this.state.mCoordinate?1:this.state.mCoordinate}\n              disabled={!this.state.mCoordinate}\n            >\n              <Option value={1}>\n                末端坐标系 1\n              </Option>\n              <Option value={2}>\n                末端坐标系 2\n              </Option>\n            </Select>\n          </Radio>\n        </RadioGroup>\n      </Row>\n      {\n        names.map((name, index)=>(<Row key={name}>\n          <Button\n            type=\"primary\"\n            size={\"large\"}\n            onClick={()=>{\n              this.getSendCmdFn(\n                `j${types[index]} --vel_percent=${this.props.vel} --direction=-1 --cor=${this.state.mCoordinate} `,\n                cell.i\n              )()\n            }}\n            onMouseDown={()=>{\n              this.getOnMouseDownFn(\n                `j${types[index]} --vel_percent=${this.props.vel} --direction=-1 --cor=${this.state.mCoordinate} `,\n                cell.i\n              )()\n            }}\n            onMouseUp={()=>{\n              this.getOnMouseUpFn()()\n              // this.getSendCmdFn(types[index], -1)\n            }}\n          >{name}-</Button>\n            <Button\n              type=\"primary\"\n              size={\"large\"}\n              // onClick={()=>{\n              //   this.getSendCmdFn(\n              //     `j${types[index]} --vel_percent=${this.props.vel} --direction=1 --cor=${this.state.mCoordinate} `,\n              //     cell.i\n              //   )()\n              // }}\n              onMouseDown={()=>{\n                this.getOnMouseDownFn(\n                  `j${types[index]} --vel_percent=${this.props.vel} --direction=1 --cor=${this.state.mCoordinate} `,\n                  cell.i\n                )()\n              }}\n              onMouseUp={()=>{\n                this.getOnMouseUpFn()()\n              }}>{name}+</Button>\n          </Row>)\n        )\n      }\n      <Row className={`${prefixCls}-end_pe`}>\n        <div>\n          <span>X</span>\n          <span>{!!endPE && (!!endPE[0] || endPE[0]===0)?endPE[0].toFixed(3):'null'}</span>\n        </div>\n        <div>\n          <span>Y</span>\n          <span>{!!endPE && (!!endPE[1] || endPE[1]===0)?endPE[1].toFixed(3):'null'}</span>\n        </div>\n        <div>\n          <span>Z</span>\n          <span>{!!endPE && (!!endPE[2] || endPE[2]===0)?endPE[2].toFixed(3):'null'}</span>\n        </div>\n      </Row>\n      <Row className={`${prefixCls}-end_pe`}>\n        <div>\n          <span>RX</span>\n          <span>{!!endPE && (!!endPE[3] || endPE[3]===0)?endPE[3].toFixed(3):'null'}</span>\n        </div>\n        <div>\n          <span>RY</span>\n          <span>{!!endPE && (!!endPE[4] || endPE[4]===0)?endPE[4].toFixed(3):'null'}</span>\n        </div>\n        <div>\n          <span>RZ</span>\n          <span>{!!endPE && (!!endPE[5] || endPE[5]===0)?endPE[5].toFixed(3):'null'}</span>\n        </div>\n      </Row>\n    </div>\n  }\n\n  render(){\n    return <ConfigConsumer>{this.renderJogCoordinate}</ConfigConsumer>\n  }\n}\n\nJogCoordinate.propTypes = {\n  cell: PropTypes.object.isRequired,\n  sendCmd: PropTypes.func.isRequired,\n  vel: PropTypes.number,\n  endPE: PropTypes.array,\n}\n\nfunction mapStateToProps(state) {\n  return {\n    vel: getManualMotionVel(state),\n    endPE: getMemoizeEndPE(state)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    sendCmd,\n  },\n)(JogCoordinate)\n\n","import React from 'react'\n\nexport default (props) => (<svg width=\"90px\" height=\"76px\" viewBox=\"0 0 90 76\" version=\"1.1\" {...props}>\n  <rect fillRule=\"nonzero\" x=\"0\" y=\"55.243\" width=\"18.306\" height=\"20.204\"></rect>\n  <rect fillRule=\"nonzero\" x=\"23.711\" y=\"37.304\" width=\"18.493\" height=\"38.143\"></rect>\n  <rect fillRule=\"nonzero\" x=\"47.609\" y=\"18.929\" width=\"18.493\" height=\"56.518\"></rect>\n  <rect fillRule=\"nonzero\" x=\"71.507\" y=\"0.38\" width=\"18.493\" height=\"75.067\"></rect>\n</svg>)\n","import React, {Component, Fragment} from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\nimport Icon from \"antd/lib/icon\"\nimport Row from \"antd/lib/row\"\nimport Button from \"antd/lib/button\"\nimport InputNumber  from 'antd/lib/input-number'\nimport { connect } from 'react-redux'\nimport {\n  sendCmd\n} from '../../actions'\nimport Wifi from \"../icons/Wifi\"\nimport {getPartPE} from \"../../reducers/selectors\";\nimport CellBase from \"./CellBase\";\nimport {\n  getMemoizeMotionPos,\n  getMemoizeMotionState,\n  getMemoizeSlaveAlState,\n  getMemoizeSlaveOnlineState,\n  getManualMotionVel\n} from \"../../selectors\";\n\nclass JogJoint extends CellBase {\n  renderJogJoint = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      cell,\n      slaveOnlineState,\n      slaveAlState,\n      motionState,\n      motionPos,\n    } = this.props\n    const prefixCls = getPrefixCls('jog-joint', customizePrefixCls);\n\n    return <div\n      className={`${prefixCls}`}\n    >\n      {\n        [0, 1, 2, 3, 4, 5].map((i) => <Row key={i}>\n          <Button\n            type=\"primary\"\n            size={\"large\"}\n            // onClick={()=> {\n            //   this.sendCmd(`j${i+1} --direction=-1 --vel_percent=${this.props.vel}`, cell.i)\n            // }}\n            onMouseDown={()=>{\n              this.getOnMouseDownFn(\n                `j${i+1} --direction=-1 --vel_percent=${this.props.vel}`,\n                cell.i\n              )()\n            }}\n            onMouseUp={()=>{\n              this.getOnMouseUpFn()()\n            }}\n          >J{i+1}-</Button>\n          <div className={`${prefixCls}-status`}>\n            <span>\n              {(motionPos && (motionPos[i] || motionPos[i] === 0))?motionPos[i].toFixed(3):'null'}\n            </span>\n            <div className={`${prefixCls}-status-icons`}>\n              <Icon component={Wifi} className={`${\n                (!slaveOnlineState || !slaveOnlineState[i])?`${prefixCls}-slave-online-state disabled`:`${prefixCls}-slave-online-state ${prefixCls}-slave-online-state-${slaveAlState && slaveAlState[i]}`\n              }`}/>\n              {\n                !!(motionState && motionState[i]) && <Icon type=\"check-circle\" theme={\"filled\"} className={\"success\"} />\n              }\n              {\n                !!(!motionState || !motionState[i]) && <Icon type=\"check-circle\" theme={\"filled\"} className={\"disabled\"}/>\n              }\n            </div>\n          </div>\n          <Button\n            type=\"primary\"\n            size={\"large\"}\n            onClick={()=> {\n            this.sendCmd(`j${i+1} --direction=1 --vel_percent=${this.props.vel}`, cell.i)\n          }}\n            onMouseDown={()=>{\n              this.getOnMouseDownFn(\n                `j${i+1} --direction=1 --vel_percent=${this.props.vel}`,\n                cell.i\n              )()\n            }}\n            onMouseUp={()=>{\n              this.getOnMouseUpFn()()\n            }}\n          >J{i+1}+</Button>\n        </Row>)\n      }\n    </div>\n  }\n\n  render(){\n    return <ConfigConsumer>{this.renderJogJoint}</ConfigConsumer>\n  }\n}\n\nJogJoint.propTypes = {\n  cell: PropTypes.object.isRequired,\n  sendCmd: PropTypes.func.isRequired,\n  vel: PropTypes.number,\n  motionPos: PropTypes.array,\n  slaveOnlineState: PropTypes.array,\n}\n\nfunction mapStateToProps(state) {\n  return {\n    vel: getManualMotionVel(state),\n    motionPos: getMemoizeMotionPos(state),\n    motionState: getMemoizeMotionState(state),\n    slaveOnlineState: getMemoizeSlaveOnlineState(state),\n    slaveAlState: getMemoizeSlaveAlState(state),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    sendCmd,\n  },\n)(JogJoint)\n\n","import React, {Component, Fragment} from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux'\nimport Slider from 'antd/lib/slider'\nimport {\n  updateManualMotionVel\n} from '../../actions'\n\nclass ManualMotionVel extends Component {\n  componentDidMount() {\n    let {vel, updateManualMotionVel} = this.props\n    let option = this.getVelOption()\n    if((!!option || option === 0) && !vel){\n      updateManualMotionVel(option)\n    }\n  }\n\n  getVelOption = () => {\n    const { cell } = this.props\n    if(cell.options) {\n      let fo = cell.options.filter(o=>o.name==='manualMotionVel')\n      if(fo.length>0){\n        try{\n          return parseFloat(fo[0].value)\n        }catch (e) {\n          console.error(e)\n        }\n      }\n    }\n  }\n  renderManualMotionVel = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      cell,\n    } = this.props\n    const prefixCls = getPrefixCls('manual-motion-vel', customizePrefixCls);\n    const option = this.getVelOption()\n    return <div\n      className={`${prefixCls}`}\n    >\n      <Slider\n        tooltipVisible={true}\n        min={0}\n        max={100}\n        tipFormatter={(value)=>`${value}%`}\n        value={this.props.vel || option}\n        onChange={(value)=>{\n          this.props.updateManualMotionVel(value)\n          let copyCell = {...this.props.cell}\n          if(!copyCell.options || copyCell.options.length === 0){\n            copyCell.options = [{name:\"manualMotionVel\", value: `${value}`}]\n          }else{\n            copyCell.options = [...copyCell.options]\n            let matched = false\n            copyCell.options.forEach((o, i)=>{\n              if(o.name === \"manualMotionVel\"){\n                copyCell.options[i] = {name:\"manualMotionVel\", value: `${value}`}\n                matched = true\n              }\n            })\n            if(!matched){\n              copyCell.options.push({name:\"manualMotionVel\", value: `${value}`})\n            }\n          }\n          console.log(copyCell)\n          this.props.onCellUpdate(copyCell)\n        }}\n        getTooltipPopupContainer={()=>document.getElementById(\"dashboard\")}\n      />\n    </div>\n  }\n\n  render(){\n    return <ConfigConsumer>{this.renderManualMotionVel}</ConfigConsumer>\n  }\n}\n\nManualMotionVel.propTypes = {\n  cell: PropTypes.object.isRequired,\n  vel: PropTypes.number,\n  updateManualMotionVel: PropTypes.func.isRequired,\n  onCellUpdate: PropTypes.func.isRequired\n}\n\nfunction mapStateToProps(state) {\n  return {vel: state.robot.manualMotionVel}\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    updateManualMotionVel\n  },\n)(ManualMotionVel)\n\n","import React, {Component, Fragment} from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\nimport Icon from \"antd/lib/icon\"\nimport { connect } from 'react-redux'\nimport {getStateCode} from \"../../reducers/selectors\";\nimport {getWebsocketConnected} from \"../../selectors/websocket\";\n\nclass RobotStatus extends Component {\n  renderJogJoint = ({getPrefixCls}) => {\n    let {\n      prefixCls: customizePrefixCls,\n      cell,\n      websocketConnected,\n      stateCode,\n    } = this.props\n    if(!stateCode) {\n      stateCode = 100\n    }\n    const colors = {\n      100:\"#AAAAAA\",\n      200:\"#FF851B\",\n      300:\"#FF4136\",\n      400:\"#0074D9\",\n      500:\"#01FF70\"\n    }\n    const names = {\n      100:\"去使能\",\n      200:\"手动\",\n      300:\"准备自动\",\n      400:\"自动\",\n      500:\"错误停目\"\n    }\n    console.log(\"robot state code\", stateCode)\n    const color = colors[stateCode]\n    const name = names[stateCode]\n    const prefixCls = getPrefixCls('robot-status', customizePrefixCls);\n    return <div\n      className={`${prefixCls}`}\n    >\n      <div>\n        {!!websocketConnected && <Icon type=\"wifi\" className={\"success\"}>\n        </Icon> }\n        {!!websocketConnected &&\n        <span>已连接</span>\n        }\n        {!websocketConnected && <Icon type=\"wifi\" className={\"danger\"}>\n        </Icon> }\n        {!websocketConnected &&\n        <span>未连接</span>\n        }\n      </div>\n      <div>\n        <Icon\n          style={{\n            color: color,\n            fill: color\n          }}\n          fill={color}\n          type=\"check-circle\" className=\"info\" theme=\"filled\"\n        >\n        </Icon>\n        <span>{name || \"无状态\"}</span>\n      </div>\n    </div>\n  }\n\n  render(){\n    return <ConfigConsumer>{this.renderJogJoint}</ConfigConsumer>\n  }\n}\n\nRobotStatus.propTypes = {\n  cell: PropTypes.object.isRequired,\n  stateCode: PropTypes.number,\n}\n\nfunction mapStateToProps(state) {\n  return {\n    stateCode: getStateCode(state),\n    websocketConnected: getWebsocketConnected(state)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n)(RobotStatus)\n\n","import React, {Component, Fragment} from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\nimport Icon from \"antd/lib/icon\"\nimport { connect } from 'react-redux'\nimport Switch from \"antd/lib/switch\"\n\nclass ManualSwitch extends Component {\n  renderJogJoint = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      cell,\n      robotStatus,\n    } = this.props\n    const colors = ['#AAAAAA', '#FF851B','#FF4136','#0074D9', '#01FF70']\n    const names = [\"自动\",\"手动\", \"急停\", \"使能\", \"去使能\"]\n    console.log(\"robot status\", robotStatus)\n    const color = colors[Math.floor(robotStatus)%5]\n    const name = names[Math.floor(robotStatus)%5]\n    const prefixCls = getPrefixCls('manual-switch', customizePrefixCls);\n    return <div\n      className={`${prefixCls}`}\n    >\n      <div>\n        <Switch checkedChildren=\"开\" unCheckedChildren=\"关\" defaultChecked />\n        <span>使能</span>\n      </div>\n      <div>\n        <Icon type=\"drag\" />\n        <span>托动</span>\n      </div>\n      <div>\n        <Icon type=\"pushpin\" />\n        <span>保存点</span>\n      </div>\n      <div>\n        <Icon type=\"save\" />\n        <span>保存轨迹</span>\n      </div>\n    </div>\n  }\n\n  render(){\n    return <ConfigConsumer>{this.renderJogJoint}</ConfigConsumer>\n  }\n}\n\nManualSwitch.propTypes = {\n  cell: PropTypes.object.isRequired,\n  robotStatus: PropTypes.number.isRequired,\n}\n\nfunction mapStateToProps(state) {\n  return {\n    robotStatus: state.robot.robotStatus,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n)(ManualSwitch)\n\n","import React, {Component, Fragment} from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\nimport Icon from \"antd/lib/icon\"\nimport { connect } from 'react-redux'\nimport Switch from \"antd/lib/switch\"\nimport brace from 'brace';\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/java';\nimport 'brace/theme/github';\nimport 'brace/theme/monokai';\n\nclass CodeEditor extends Component {\n  onChange = (newValue) => {\n    console.log('change',newValue);\n  }\n  renderJogJoint = ({getPrefixCls}) => {\n\n    let value = `\nfunction onLoad(editor) {\n  console.log(\"i've loaded\");\n}\nfunction onLoad(editor) {\n  console.log(\"i've loaded\");\n}\nfunction onLoad(editor) {\n  console.log(\"i've loaded\");\n}\nfunction onLoad(editor) {\n  console.log(\"i've loaded\");\n}\nfunction onLoad(editor) {\n  console.log(\"i've loaded\");\n}\nfunction onLoad(editor) {\n  console.log(\"i've loaded\");\n}\n    `\n\n    const {\n      prefixCls: customizePrefixCls,\n      cell,\n    } = this.props\n    const prefixCls = getPrefixCls('code-editor', customizePrefixCls);\n    return <div\n      className={`${prefixCls}`}\n    >\n      <AceEditor\n        mode=\"javascript\"\n        theme=\"monokai\"\n        width={\"100%\"}\n        height={\"100%\"}\n        value={value}\n        onChange={this.onChange}\n        name=\"UNIQUE_ID_OF_DIV\"\n        editorProps={{$blockScrolling: true}}\n      />\n    </div>\n  }\n\n  render(){\n    return <ConfigConsumer>{this.renderJogJoint}</ConfigConsumer>\n  }\n}\n\nCodeEditor.propTypes = {\n  cell: PropTypes.object.isRequired,\n}\n\nfunction mapStateToProps(state) {\n  return {\n    robotStatus: state.robot.robotStatus,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n)(CodeEditor)\n\n","import React from 'react'\nimport PropTypes from \"prop-types\";\nimport Row from \"antd/lib/row\"\nimport Button from \"antd/lib/button\"\nimport Input  from 'antd/lib/input'\nimport CellBase from \"./CellBase\";\nimport { connect } from 'react-redux'\nimport Terminal from 'terminal-in-react'\nimport {\n  getResultByCell, getResultByChannel,\n  makeGetResultsByCell\n} from \"../../selectors\";\nconst { TextArea } = Input;\n\nclass Debugger extends CellBase {\n  interval = null\n  timeout = null\n  getSendCmdFn = () => {\n    return (()=>{\n      const {sendCmd, cell} = this.props\n      const options = this.getOptions()\n      if(options.command){\n        options.command.split(\"\\n\").forEach(cmd=>{\n          cmd = cmd.trim()\n          if(!!cmd){\n            sendCmd(cmd,cell.i)\n            this.terminal.runCommandOnActive(\"showCmd \"+cmd)\n          }\n        })\n      }\n    }).bind(this)\n  }\n\n  getOnMouseDownFn = () => {\n    return (()=>{\n      if(this.interval){\n        clearInterval(this.interval)\n      }\n      const fn = this.getSendCmdFn()\n      const self = this\n      const {commandSendInterval, commandSendDelay} = this.props\n      self.timeout = setTimeout(()=>{\n        self.interval = setInterval(fn, commandSendInterval)\n      }, commandSendDelay)\n    }).bind(this)\n  }\n  getOnMouseUpFn = () => {\n    return (()=>{\n      if(this.interval){\n        clearInterval(this.interval)\n      }\n      if(this.timeout){\n        clearTimeout(this.timeout)\n      }\n    }).bind(this)\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    if(nextProps.result !== this.props.result){\n      this.result = nextProps.result\n      this.terminal.runCommandOnActive(\"showResult\")\n    }\n    if(nextProps.cell !== this.props.cell || nextProps.result !== this.props.result){\n      return true\n    }\n    return false\n  }\n\n  renderContent = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      cell,\n      results\n    } = this.props\n    const options = this.getOptions()\n    const prefixCls = getPrefixCls('debugger', customizePrefixCls);\n    let self = this\n    return <div\n      className={`${prefixCls}`}\n    >\n      <Row>\n        <TextArea\n          rows={2}\n          value={options.command}\n          onChange={(e)=>{\n            this.updateOptions({command:e.target.value})\n          }}\n          placeholder={\"请输入一行机器人指令\"}\n        />\n        <Button\n          onClick={this.getSendCmdFn()}\n          onMouseDown={this.getOnMouseDownFn()}\n          onMouseUp={this.getOnMouseUpFn()}\n          type=\"primary\"\n          shape=\"round\"\n          icon=\"play-circle\"\n          size=\"large\"\n        >\n          Send\n        </Button>\n        <div\n          className={`${prefixCls}-terminal`}\n        >\n          <Terminal\n            color='green'\n            backgroundColor='black'\n            barColor='black'\n            hideTopBar={true}\n            allowTabs={false}\n            commands={{\n              \"showCmd\":(args, print, runCommand)=>{\n                if(args[1]){\n                  print(args.slice(1).join(\" \"))\n                }else{\n                  const options = self.getOptions()\n                  if(options.command){\n                    print(options.command)\n                  }\n                }\n              },\n              \"send\":(args, print, runCommand)=>{\n                self.props.sendCmd(args[1], self.props.cell.i)\n              },\n              \"showResult\":(args, print, runCommand)=>{\n                print(JSON.stringify(this.result))\n              },\n            }}\n            descriptions={{\n              'send': '发送指令给机器人, \"send [机器人指令]\", 例如 \"send get\"',\n              'showResult': '显示最近一条返回值',\n              'showCmd': '显示当前指令值'\n            }}\n            ref={ref=>this.terminal=ref}\n          />\n        </div>\n      </Row>\n    </div>\n  }\n\n}\n\nDebugger.propTypes = {\n  results: PropTypes.array.isRequired\n}\n\nconst makeMapStateToProps = () => {\n  const getResultsByCell = makeGetResultsByCell(10)\n  const mapStateToProps = (state, props) => {\n    return {\n      results: getResultsByCell(state, props),\n      result: getResultByChannel(state, props.cell.i),\n    }\n  }\n  return mapStateToProps\n}\n\nexport default connect(\n  makeMapStateToProps,\n)(Debugger)\n\n","import React, {Component, Fragment} from 'react'\nimport ReactEcharts from \"echarts-for-react\";\nimport echarts from \"echarts\"\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux'\nimport {\n} from \"../../selectors\";\nimport {makeGetDataKeysByChannel} from \"../../selectors\";\nimport Select from \"antd/lib/select\"\nimport {makeGetCachedDataByChannelAndKey} from \"../../selectors\";\nconst Option = Select.Option\n\n\nclass RealtimeChartChannelAndDataKey extends Component {\n  componentDidMount() {\n    console.log('RealtimeChartChannelAndDataKey componentDidMount')\n\n  }\n\n  render() {\n    const {dataKey, channel, data, options}  = this.props\n    let getOptions = null\n    if(data && data.length > 0){\n      getOptions = {\n        title: {\n          text:channel +' '+ dataKey\n        },\n        xAxis: {\n          splitLine:{show: false},//去除网格线\n          type: \"category\",\n          data: data.map(d=>d[0])\n        },\n        yAxis: {\n          splitLine:{show: false},//去除网格线\n          type: 'value'\n        },\n        series: data[0][1].map((d, i)=>({\n          name: `${dataKey}${i}`,\n          // smooth:true,\n          data: data.map(d=>d[1][i]),\n          symbol: 'none',\n          // sampling: 'average',\n          type: 'line'\n        }))\n      }\n    }\n    console.log(getOptions)\n    return <Fragment>\n      {\n        getOptions && <ReactEcharts\n          option={getOptions}\n          notMerge={true}\n          lazyUpdate={true}\n        />\n      }\n    </Fragment>\n  }\n}\n\nRealtimeChartChannelAndDataKey.propTypes = {\n  updateOptions:PropTypes.func.isRequired,\n  prefixCls: PropTypes.string.isRequired,\n  channel: PropTypes.string.isRequired,\n  dataKey: PropTypes.string.isRequired,\n  // data: PropTypes.array.isRequired,\n}\n\nconst makeMapStateToProps = () => {\n  const getCachedDataByChannelAndKey = makeGetCachedDataByChannelAndKey()\n  const mapStateToProps = (state, props) => {\n    return {\n      data: getCachedDataByChannelAndKey(state, props.channel, props.dataKey)\n    }\n  }\n  return mapStateToProps\n}\n\nexport default connect(\n  makeMapStateToProps,\n)(RealtimeChartChannelAndDataKey)\n\n","import React, {Component, Fragment} from 'react'\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux'\nimport {\n} from \"../../selectors\";\nimport {makeGetDataKeysByChannel} from \"../../selectors\";\nimport RealtimeChartChannelAndDataKey from \"./RealtimeChartChannelAndDataKey\";\nimport Select from \"antd/lib/select\"\nconst Option = Select.Option\n\nclass RealtimeChartChannel extends Component {\n  handleSelect = (value) => {\n    const {options, updateOptions} = this.props\n    updateOptions({...options, dataKey: value})\n  }\n  componentDidMount() {\n    console.log('RealtimeChartChannel componentDidMount')\n  }\n\n  render() {\n    console.log('RealtimeChartChannel render')\n\n    const {\n      dataKeys,\n      options,\n      updateOptions,\n      channel,\n      prefixCls\n    }  = this.props\n    let value = \"\"\n    if(dataKeys && dataKeys.indexOf(options.dataKey) !== -1){\n      value = options.dataKey\n    }\n    return <Fragment>\n      {!!(dataKeys && dataKeys.length > 0) && <Select\n        style={{width: \"100%\"}}\n        size={\"small\"}\n        onSelect={this.handleSelect}\n        value={value}\n        placeholder={\"选择DataKey\"}\n      >\n        {\n          dataKeys.map(c => <Option key={c} value={c}>{c.toUpperCase()}</Option>)\n        }\n      </Select>\n      }\n      {!!(dataKeys && dataKeys.length > 0 && value) && <RealtimeChartChannelAndDataKey\n        key={(channel+value).replace(\" \", \"_\")}\n        dataKey={value}\n        channel={channel}\n        updateOptions={updateOptions}\n        options={options}\n        prefixCls={prefixCls}\n        />\n      }\n    </Fragment>\n  }\n}\n\nRealtimeChartChannel.propTypes = {\n  updateOptions:PropTypes.func.isRequired,\n  prefixCls: PropTypes.string.isRequired,\n  channel: PropTypes.string.isRequired,\n  dataKeys: PropTypes.array,\n}\n\nconst makeMapStateToProps = () => {\n  const getDataKeysByChannel = makeGetDataKeysByChannel()\n  const mapStateToProps = (state, props) => {\n    return {\n      dataKeys: getDataKeysByChannel(state, props.channel)\n    }\n  }\n  return mapStateToProps\n}\n\nexport default connect(\n  makeMapStateToProps,\n)(RealtimeChartChannel)\n\n","import React from 'react'\nimport PropTypes from \"prop-types\";\nimport Input  from 'antd/lib/input'\nimport CellBase from \"./CellBase\";\nimport { connect } from 'react-redux'\nimport Select from \"antd/lib/select\"\nimport RealtimeChartChannel from \"../containers/RealtimeChartChannel\";\nimport {\n  getMemoizeChannelNames,\n} from \"../../selectors\";\n\nconst Option = Select.Option\n\n\nclass RealtimeChart extends CellBase {\n   handleChange = (value) => {\n     const options = this.getOptions()\n     this.updateOptions({...options, channel: value})\n  }\n  renderContent = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      cell,\n      channels\n    } = this.props\n    const options = this.getOptions()\n    const prefixCls = getPrefixCls('realtime-chart', customizePrefixCls);\n    let self = this\n    let value = \"\"\n    if(channels && channels.indexOf(options.channel) !== -1){\n      value = options.channel\n    }\n    return <div\n      className={`${prefixCls} ${!(channels && channels.length > 0) && prefixCls+\"-no-data\"}`}\n    >\n      {!(channels && channels.length > 0) && <span>无实时数据</span>}\n      {!!(channels && channels.length > 0) && <Select\n        style={{width: \"100%\"}}\n        size={\"small\"}\n        placeholder={\"选择DataKey\"}\n        onSelect={this.handleChange}\n        value={value}\n      >\n        {\n          channels.map(c => <Option key={c} value={c}>{c.toUpperCase()}</Option>)\n        }\n      </Select>\n      }\n      {\n        !!(channels && channels.length > 0 && options.channel) && <RealtimeChartChannel\n          key={options.channel}\n          channel={options.channel}\n          options={options}\n          updateOptions={this.updateOptions}\n          prefixCls={prefixCls}\n        />\n      }\n      </div>\n  }\n}\n\nRealtimeChart.propTypes = {\n  channels: PropTypes.array.isRequired\n}\n\nconst makeMapStateToProps = () => {\n  const mapStateToProps = (state, props) => {\n    return {\n      channels: getMemoizeChannelNames(state),\n    }\n  }\n  return mapStateToProps\n}\n\nexport default connect(\n  makeMapStateToProps,\n)(RealtimeChart)\n\n","import CommandButton from \"./CommandButton\";\nimport Logger from \"./Logger\";\nimport Unknown from \"./Unknown\";\nimport View3D from \"./View3D\";\nimport JogCoordinate from \"./JogCoordinate\"\nimport JogJoint from \"./JogJoint\"\nimport ManualMotionVel from \"./ManualMotionVel\"\nimport RobotStatus from \"./RobotStatus\"\nimport ManualSwitch from \"./ManualSwitch\"\nimport CodeEditor from \"./CodeEditor\";\nimport Debugger from \"./Debugger\";\nimport RealtimeChart from \"./RealtimeChart\";\n\nexport default {\n  RealtimeChart,\n  Debugger,\n  CodeEditor,\n  CommandButton,\n  Logger,\n  View3D,\n  \"3DView\": View3D,\n  JogCoordinate,\n  JogJoint,\n  ManualMotionVel,\n  RobotStatus,\n  ManualSwitch,\n  Unknown\n}","import React, {Component, Fragment} from 'react'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\nimport LayoutCell from \"./LayoutCell\";\nimport CellByTypes from \"../cells\";\nimport { connect } from 'react-redux'\nimport {getCommandSendDelay, getCommandSendInterval} from \"../../selectors\";\nconst Unknown = CellByTypes.Unknown\nclass Layout extends Component {\n  constructor(props){\n    super(props)\n    this.cellByTypes = {}\n    let self = this\n    Object.keys(CellByTypes).forEach(key=>{\n      self.cellByTypes[key.toLowerCase()]=CellByTypes[key]\n    })\n  }\n  componentDidMount() {\n    console.error(\"Layout componentDidMount\")\n  }\n\n  toggleVisType = () =>{\n    // TODO 切换CELL类型\n  }\n  renderLayout = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      isEditable,\n      cell,\n      onCloneCell,\n      onDeleteCell,\n      sendCmd,\n      onCellUpdate,\n    } = this.props\n    const prefixCls = getPrefixCls('layout', customizePrefixCls);\n    return <LayoutCell\n      cell={cell}\n      onCellUpdate={onCellUpdate}\n      onDeleteCell={onDeleteCell}\n      sendCmd={sendCmd}\n      onCloneCell={onCloneCell}\n      toggleVisType={this.toggleVisType.bind(this)}\n      isEditable={isEditable}\n    >\n      {this.renderLayoutBody(prefixCls)}\n    </LayoutCell>\n  }\n\n  renderLayoutBody(prefixCls){\n    const {\n      cell,\n      onCellUpdate,\n      sendCmd,\n      commandSendInterval,\n      commandSendDelay\n    } = this.props\n    if(!cell.type || !this.cellByTypes[cell.type.toLowerCase()]){\n      return <Unknown cell={cell} onCellUpdate={onCellUpdate} sendCmd={sendCmd}/>\n    }else{\n      const CellComponent = this.cellByTypes[cell.type.toLowerCase()]\n      return <CellComponent\n        cell={cell}\n        onCellUpdate={onCellUpdate}\n        sendCmd={sendCmd}\n        commandSendInterval={commandSendInterval}\n        commandSendDelay={commandSendDelay}\n      />\n    }\n  }\n\n  render(){\n    console.log('Layout render()')\n    return <ConfigConsumer>{this.renderLayout}</ConfigConsumer>\n  }\n}\n\nLayout.propTypes = {\n  cell: PropTypes.object.isRequired,\n  onDeleteCell: PropTypes.func.isRequired,\n  onCellUpdate: PropTypes.func.isRequired,\n  onCloneCell: PropTypes.func.isRequired,\n  onZoom: PropTypes.func.isRequired,\n  sendCmd: PropTypes.func.isRequired,\n  isEditable: PropTypes.bool.isRequired,\n}\n\n\nfunction mapStateToProps(state, props) {\n  return {\n    commandSendInterval: getCommandSendInterval(state),\n    commandSendDelay: getCommandSendDelay(state)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n)(Layout)\n\n","import React, {Component} from 'react'\nimport ReactGridLayout, {WidthProvider} from 'react-grid-layout'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport PropTypes from \"prop-types\";\nimport Layout from \"../components/Layout\";\nimport {sendCmd} from \"../../actions\";\n\nconst GridLayout = WidthProvider(ReactGridLayout)\n\nclass LayoutRenderer extends Component {\n  componentDidMount() {\n    console.error(\"LayoutRenderer componentDidMount\")\n  }\n\n  handleLayoutChange = (layout) => {\n    if (!this.props.onPositionChange) {\n      return\n    }\n    const self = this\n    let changed = false\n    const newCells = self.props.cells.map(cell => {\n      const l = layout.find(ly => {\n        return ly.i == cell.i\n      })\n      if(!l){\n        return\n      }\n      if (\n        cell.x !== l.x ||\n        cell.y !== l.y ||\n        cell.h !== l.h ||\n        cell.w !== l.w\n      ) {\n        changed = true\n      }\n      const newLayout = {\n        x: l.x,\n        y: l.y,\n        h: l.h,\n        w: l.w,\n      }\n      return {\n        ...cell,\n        ...newLayout,\n      }\n    })\n\n    if (changed) {\n      this.props.onPositionChange(newCells)\n    }\n  }\n\n  renderLayoutRender = ({getPrefixCls}) => {\n    const {\n      prefixCls: customizePrefixCls,\n      cells,\n      onZoom,\n      isEditable,\n      onDeleteCell,\n      onCloneCell,\n      sendCmd,\n      onCellUpdate,\n      layoutCols,\n      layoutMargin,\n      layoutContainerPadding,\n      layoutRowHeight,\n      windowHeight,\n    } = this.props\n    const prefixCls = getPrefixCls('layout-renderer', customizePrefixCls)\n    const draggableCls = `.${getPrefixCls('layout-cell', customizePrefixCls)}--draggable`\n    let rowCount = Math.floor((windowHeight-40)/layoutRowHeight)\n    if(rowCount <= 0){\n      rowCount = 1\n    }\n    let rowHeight = Math.floor((windowHeight-40)/rowCount)\n    if(rowHeight < layoutRowHeight){\n      rowHeight = layoutRowHeight\n    }\n    return <div className={`${prefixCls} ${isEditable?'editable':\"\"}`}>\n      <GridLayout\n        layout={cells}\n        cols={layoutCols}\n        rowHeight={rowHeight}\n        margin={[layoutMargin, layoutMargin]}\n        containerPadding={[layoutContainerPadding, layoutContainerPadding]}\n        useCSSTransforms={false}\n        onLayoutChange={this.handleLayoutChange}\n        draggableHandle={draggableCls}\n        isDraggable={true}\n        isResizable={true}\n      >\n        {cells.map(cell=>(<div\n          key={cell.i}\n          className={isEditable?\"editable\":\"\"}\n        >\n          <Layout\n            cell={cell}\n            onDeleteCell={onDeleteCell}\n            onCloneCell={onCloneCell}\n            onCellUpdate={onCellUpdate}\n            onZoom={onZoom}\n            sendCmd={sendCmd}\n            isEditable={isEditable}\n          />\n        </div>))}\n      </GridLayout>\n    </div>\n  }\n\n  render(){\n    console.log('LayoutRenderer render()')\n    return <ConfigConsumer>{this.renderLayoutRender}</ConfigConsumer>\n  }\n}\n\nLayoutRenderer.propTypes = {\n  cells: PropTypes.array.isRequired,\n  layoutCols: PropTypes.number.isRequired,\n  layoutRowHeight: PropTypes.number.isRequired,\n  layoutMargin: PropTypes.number.isRequired,\n  layoutContainerPadding: PropTypes.number.isRequired,\n  isEditable: PropTypes.bool.isRequired,\n  onZoom: PropTypes.func.isRequired,\n  sendCmd: PropTypes.func.isRequired,\n  onCloneCell: PropTypes.func.isRequired,\n  onDeleteCell: PropTypes.func.isRequired,\n  onPositionChange: PropTypes.func.isRequired,\n  onCellUpdate: PropTypes.func.isRequired,\n}\n\nexport default LayoutRenderer","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport { withSize } from 'react-sizeme'\n\n\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport DashboardEmpty from \"./DashboardEmpty\";\nimport LayoutRenderer from \"../shared/containers/LayoutRenderer\";\nimport {sendCmd} from \"../actions\";\n\nclass Dashboard extends Component {\n  renderDashboard = ({getPrefixCls}) => {\n    let {\n      dashboard,\n      prefixCls: customizePrefixCls,\n      onZoom,\n      onCloneCell,\n      onDeleteCell,\n      onPositionChange,\n      sendCmd,\n      onCellUpdate,\n      layoutCols,\n      layoutRowHeight,\n      layoutMargin,\n      layoutContainerPadding,\n      size: {width, height}\n    } = this.props\n    const prefixCls = getPrefixCls('dashboard', customizePrefixCls);\n    return <div\n      className={`${prefixCls}`}\n      id={'dashboard'}\n    >\n      {!!dashboard.cells && dashboard.cells.length ?(<LayoutRenderer\n        layoutCols={layoutCols}\n        layoutRowHeight={layoutRowHeight}\n        windowWidth={width}\n        windowHeight={height}\n        layoutMargin={layoutMargin}\n        layoutContainerPadding={layoutContainerPadding}\n        cells={dashboard.cells}\n        templates={[]}\n        manualRefresh={10}\n        onCellUpdate={onCellUpdate}\n        isEditable={!!dashboard.editable}\n        onZoom={onZoom}\n        sendCmd={sendCmd}\n        onCloneCell={onCloneCell}\n        onDeleteCell={onDeleteCell}\n        onPositionChange={onPositionChange}\n      />) : (<DashboardEmpty\n        dashboard={dashboard}\n        onAddCell={()=>{}}\n      />)\n      }\n    </div>\n  }\n\n  render(){\n    console.log('Dashboard render()')\n    return <ConfigConsumer>{this.renderDashboard}</ConfigConsumer>\n  }\n}\n\nDashboard.propTypes = {\n  layoutCols: PropTypes.number.isRequired,\n  layoutRowHeight: PropTypes.number.isRequired,\n  layoutMargin: PropTypes.number.isRequired,\n  layoutContainerPadding: PropTypes.number.isRequired,\n  dashboard: PropTypes.object.isRequired,\n  inPresentationMode: PropTypes.bool.isRequired,\n  onPositionChange: PropTypes.func.isRequired,\n  onCellUpdate: PropTypes.func.isRequired,\n  onDeleteCell: PropTypes.func.isRequired,\n  onCloneCell: PropTypes.func.isRequired,\n  onAddCell: PropTypes.func.isRequired,\n  sendCmd: PropTypes.func.isRequired,\n  manualRefresh: PropTypes.number.isRequired,\n  timeRange: PropTypes.object.isRequired,\n  onZoom: PropTypes.func.isRequired,\n  setScrollTop: PropTypes.func.isRequired,\n  inView: PropTypes.func.isRequired,\n}\n\nexport default withSize({monitorHeight:true})(Dashboard)\n\n","import React, {Component} from 'react';\nimport Dashboard from \"../components/Dashboard\";\nimport { connect } from 'react-redux'\nimport {\n  getDashboard,\n  getDashboardCells,\n  getLayoutCols, getLayoutContainerPadding,\n  getLayoutMargin,\n  getLayoutRowHeight\n} from \"../reducers/selectors\";\nimport {updateDashboard, createCell, deleteCell, sendCmd} from \"../actions\";\nimport PropTypes from \"prop-types\";\nimport {getCurrentDashboardAndCells} from \"../selectors\";\n\nclass DashboardPage extends Component {\n\n  onPositionChange = (cells) =>{\n    //此处一定要做复制操作，不能直接Return原dashboard和cells\n    let {dashboard, updateDashboard} = this.props\n    dashboard = {...dashboard, cells:[...cells]}\n    updateDashboard(dashboard)\n  }\n  onCellUpdate = (cell) => {\n    //此处一定要做复制操作，不能直接Return原dashboard和cells\n    let {dashboard, updateDashboard} = this.props\n    let cells = [...dashboard.cells]\n    cells.forEach((c, i)=>{\n      if(cell.i === c.i){\n        cells[i] = {...cell}\n      }\n    })\n    dashboard = {...dashboard, cells}\n    updateDashboard(dashboard)\n  }\n  onAddCell = (cell) => {\n    console.log(cell)\n    cell = {...cell}\n    delete cell['i']\n    this.props.createCell(this.props.dashboard.i, cell)\n  }\n  onDeleteCell = (cellId) => {\n    this.props.deleteCell(this.props.dashboard.i, cellId)\n  }\n  render(){\n    console.log('DashboardPage render()')\n    const {\n      dashboard,\n      cells,\n      layoutCols,\n      layoutRowHeight,\n      layoutMargin,\n      layoutContainerPadding,\n      sendCmd,\n    } = this.props\n    return <Dashboard\n      dashboard={dashboard}\n      layoutCols={layoutCols}\n      layoutRowHeight={layoutRowHeight}\n      layoutMargin={layoutMargin}\n      layoutContainerPadding={layoutContainerPadding}\n\n      inPresentationMode={false}\n      onPositionChange={this.onPositionChange}\n      onCellUpdate={this.onCellUpdate}\n      onDeleteCell={this.onDeleteCell}\n      onCloneCell={this.onAddCell}\n      onAddCell={this.onAddCell}\n      sendCmd={sendCmd}\n      onSummonOverlayTechnologies={()=>{}}\n      manualRefresh={0}\n      timeRange={{}}\n      onZoom={()=>{}}\n      setScrollTop={()=>{}}\n      inView={()=>{}}\n    />\n  }\n}\n\nconst makeMapStateToProps = () => {\n\n}\n\nfunction mapStateToProps(state, props) {\n  const {match:{params:{id}}} = props\n  return {\n    dashboard: getCurrentDashboardAndCells(state),\n    layoutCols: getLayoutCols(state),\n    layoutRowHeight: getLayoutRowHeight(state),\n    layoutMargin: getLayoutMargin(state),\n    layoutContainerPadding: getLayoutContainerPadding(state)\n  }\n}\n\n\nDashboard.propTypes = {\n  dashboard: PropTypes.object.isRequired,\n  // cells: PropTypes.array.isRequired,\n  // inPresentationMode: PropTypes.bool.isRequired,\n  // onPositionChange: PropTypes.func.isRequired,\n  // onDeleteCell: PropTypes.func.isRequired,\n  // onCloneCell: PropTypes.func.isRequired,\n  // onAddCell: PropTypes.func.isRequired,\n  // onSummonOverlayTechnologies: PropTypes.func.isRequired,\n  // manualRefresh: PropTypes.number.isRequired,\n  // timeRange: PropTypes.object.isRequired,\n  // onZoom: PropTypes.func.isRequired,\n  // setScrollTop: PropTypes.func.isRequired,\n  // inView: PropTypes.func.isRequired,\n  layoutCols: PropTypes.number.isRequired,\n  layoutRowHeight: PropTypes.number.isRequired,\n  layoutMargin: PropTypes.number.isRequired,\n  layoutContainerPadding: PropTypes.number.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    updateDashboard,\n    sendCmd,\n    createCell,\n    deleteCell\n  }\n)(DashboardPage)\n","import React from 'react';\n\nfunction ConfigurationPage() {\n  return (\n    <div className=\"App\">\n      Configuration\n    </div>\n  );\n}\n\nexport default ConfigurationPage;\n","import React from 'react'\nimport { Route, Switch } from 'react-router'\nimport DashboardPage from './containers/DashboardPage'\nimport ConfigurationPage from './containers/ConfigurationPage'\n\nexport default (\n  <Switch>\n    <Route exact path=\"/\"\n           component={DashboardPage} />\n    <Route path=\"/configuration\"\n           component={ConfigurationPage} />\n    <Route path=\"/dashboards/:id\"\n           component={DashboardPage} />\n  </Switch>\n)","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\n\nimport Menu from 'antd/lib/menu';\nimport Icon from 'antd/lib/icon';\n\nconst MenuItem = Menu.Item\n\n\nclass Header extends Component {\n\n  handleClick = e => {\n    this.props.navigate(e.key)\n  }\n\n  onCreateCell = () => {\n    let {createCell, pathname, dashboard} =  this.props\n    if(dashboard){\n      createCell(dashboard.i)\n    }\n  }\n\n  toggleLock = () => {\n    let {updateDashboard, dashboard} = this.props\n    if(dashboard){\n      dashboard = {...dashboard, editable: !dashboard.editable}\n      updateDashboard(dashboard)\n    }\n  }\n\n  render(){\n    let {\n      className, pathname, dashboards,  prefixCls: customizePrefixCls,\n      dashboard,\n    } = this.props\n    if(pathname === '/' && dashboards.length > 0){\n      pathname = `/dashboards/${dashboards[0].i}`\n    }\n    return <div\n      className={className}\n    >\n\n      <Menu\n        onClick={this.handleClick}\n        selectedKeys={[pathname]}\n        mode=\"horizontal\"\n      >\n        {dashboards.map(d=>(\n          <MenuItem key={`/dashboards/${d.i}`}>\n            {d.name}\n          </MenuItem>\n        ))}\n      </Menu>\n      <div\n        className={\"actions\"}\n        style={{\n          position: 'absolute',\n          right: 0,\n          top: 0,\n          display: 'inline-block'\n        }}\n      >\n        <Icon\n          className={`${(dashboard && dashboard.editable)?\"\":\"disabled\"}`}\n          type=\"block\" onClick={\n          (dashboard && dashboard.editable)?this.onCreateCell:()=>{}\n          }\n        />\n        <Icon\n          type=\"lock\"\n          className={`${(dashboard && dashboard.editable)?\"\":\"info\"}`}\n          onClick={this.toggleLock}\n        />\n        <Icon type=\"fullscreen\" />\n        <Icon type=\"sync\" />\n      </div>\n    </div>\n  }\n\n}\n\nHeader.propTypes = {\n  pathname: PropTypes.string.isRequired,\n  dashboard: PropTypes.object.isRequired,\n  navigate: PropTypes.func.isRequired,\n  createCell: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  updateDashboard: PropTypes.func.isRequired,\n}\n\nexport default Header\n","import React, {Component, Fragment} from 'react';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport routes from '../routes'\nimport Header from '../components/Header'\nimport {getCurrentDashboard, getDashboards} from \"../selectors/config\";\nimport {\n  loadConfig,\n  navigate,\n  resetErrorMessage,\n  updateRouterState,\n  startWebsocket,\n  stopWebsocket,\n  sendCmd,\n  createCell,\n  updateDashboard,\n} from '../actions'\nimport {ConfigConsumer} from 'antd/lib/config-provider'\nimport {getGetInterval, getWsUrl} from \"../selectors\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleDismissClick = this.handleDismissClick.bind(this)\n    this.getData()\n  }\n\n  getData(){\n  }\n\n  componentWillMount() {\n    this.props.loadConfig()\n    this.props.updateRouterState({\n      pathname: this.props.location.pathname,\n      params: this.props.params,\n    })\n    if(!!this.props.ws){\n      this.props.startWebsocket(this.props.ws)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalTimer)\n    this.props.stopWebsocket()\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (this.props.location.pathname !== nextProps.location.pathname)\n      this.props.updateRouterState({\n        pathname: nextProps.location.pathname,\n        params: nextProps.params,\n      })\n    if(this.props.ws !== nextProps.ws && !!nextProps.ws){\n      this.props.startWebsocket(nextProps.ws)\n    }\n    if(this.props.getInterval !== nextProps.getInterval && !!nextProps.getInterval){\n      if(this.intervalTimer){\n        clearInterval(this.intervalTimer)\n      }\n      const {sendCmd, getInterval} = nextProps\n      const self = this\n      console.log('command get interval', getInterval)\n      this.intervalTimer = setInterval(()=>{\n        const {websocketConnected} = this.props\n        if(websocketConnected){\n          const cmdId = sendCmd('get', 'get')\n        }\n      }, getInterval)\n    }\n  }\n\n  handleDismissClick(e) {\n    this.props.resetErrorMessage()\n    e.preventDefault()\n  }\n\n\n  handleChange(nextValue) {\n    this.props.navigate(`/${nextValue}`)\n  }\n\n  renderErrorMessage() {\n    const { errorMessage } = this.props\n    if (!errorMessage) {\n      return null\n    }\n\n    return (\n      <p style={{ backgroundColor: '#e99', padding: 10 }}>\n        <b>{errorMessage}</b> (<a href=\"#\" onClick={this.handleDismissClick}>\n        Dismiss\n      </a>)\n      </p>\n    )\n  }\n\n  renderApp = ({getPrefixCls}) => {\n    const {location:{pathname}, dashboards, navigate, prefixCls: customizePrefixCls, createCell, dashboard, updateDashboard} = this.props\n    const prefixCls = getPrefixCls('app', customizePrefixCls);\n    if(!dashboards){\n      return <div className={prefixCls}>\n        Loading...\n      </div>\n    }\n    return <div className={prefixCls}>\n      <Header\n        className={`${prefixCls}-header`}\n        pathname={pathname}\n        dashboard={dashboard}\n        dashboards={dashboards}\n        navigate={navigate}\n        updateDashboard={updateDashboard}\n        createCell={createCell}\n      />\n      <div className={`${prefixCls}-content`}>\n      {this.renderErrorMessage()}\n      {routes}\n      </div>\n    </div>\n  }\n\n  render(){\n    console.log('App render()')\n    return <ConfigConsumer>{this.renderApp}</ConfigConsumer>\n  }\n}\n\nApp.propTypes = {\n  // Injected by React Redux\n  errorMessage: PropTypes.string,\n  navigate: PropTypes.func.isRequired,\n  updateRouterState: PropTypes.func.isRequired,\n  resetErrorMessage: PropTypes.func.isRequired,\n  loadConfig: PropTypes.func.isRequired,\n  startWebsocket: PropTypes.func.isRequired,\n  stopWebsocket: PropTypes.func.isRequired,\n  updateDashboard: PropTypes.func.isRequired,\n\n  websocketConnected: PropTypes.bool.isRequired,\n  // Injected by React Router\n  children: PropTypes.node,\n  location: PropTypes.any,\n  params: PropTypes.any,\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dashboards: getDashboards(state),\n    dashboard: getCurrentDashboard(state),\n    errorMessage: state.errorMessage,\n    websocketConnected: state.robot.websocketConnected,\n    getInterval: getGetInterval(state),\n    ws: getWsUrl(state),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    loadConfig: loadConfig,\n    navigate,\n    updateRouterState,\n    resetErrorMessage,\n    startWebsocket,\n    stopWebsocket,\n    createCell,\n    sendCmd,\n    updateDashboard\n  },\n)(App)\n\n","import * as actions from '../actions'\n\nconst initialState = {\n  resultsByChannel: {},\n  websocketConnected: false,\n  websocketError: null,\n  channelsById: {},\n  robotStatus: 4,\n}\n\n//可以处理中文\nfunction utf8ArrayToStr(array) {\n  let out, i, len, c\n  let char2, char3\n\n  out = \"\"\n  len = array.length\n  i = 0\n  while(i < len) {\n    c = array[i++]\n    switch(c >> 4)\n    {\n      case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\n      // 0xxxxxxx\n      out += String.fromCharCode(c)\n      break\n      case 12: case 13:\n      // 110x xxxx   10xx xxxx\n      char2 = array[i++]\n      out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F))\n      break\n      case 14:\n        // 1110 xxxx  10xx xxxx  10xx xxxx\n        char2 = array[i++]\n        char3 = array[i++]\n        out += String.fromCharCode(((c & 0x0F) << 12) |\n          ((char2 & 0x3F) << 6) |\n          ((char3 & 0x3F) << 0))\n        break;\n    }\n  }\n\n  return out\n}\n\n\n\nfunction analyzeBotData(buffer, channelsByID, anyRobot) {\n  let dataView=new DataView(buffer);\n  let cmdLength=dataView.getInt32(0);\n  let cmdId=dataView.getInt32(4,true);\n  let cmdCode=dataView.getFloat64(16,true);\n  //如是没有channel的cmd数据存储\n  if(!channelsByID[cmdCode]){\n    return\n  }\n  try{\n    let str = utf8ArrayToStr(new Uint8Array(buffer, 40))\n    return {...JSON.parse(str), id: cmdCode, cmd_response_time: Date.now() - cmdCode}\n  }catch (e) {\n    console.error(e)\n  }\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actions.WEBSOCKET_CONNECTED:\n      return {...state, websocketConnected: true}\n    case actions.WEBSOCKET_DISCONNECTED:\n      return {...state, websocketConnected: false}\n    case actions.WEBSOCKET_ERROR:\n      return {...state, websocketError: action.payload}\n    case actions.UPDATE_MANUAL_MOTION_VEL:\n      console.log(action)\n      return {...state, manualMotionVel:action.vel}\n    case actions.SEND_CMD:\n    {\n      let {id, channel} = action\n      //如果channel被设定则会收集cmd结果\n      if(!!channel){\n        let channelsById = {...state.channelsById}\n        channelsById[id] = channel\n        return {...state, channelsById}\n      }else{\n        return state\n      }\n    }\n    case actions.CMD_RESPONSE:\n    {\n      let {data} = action\n      let channelsById = {...state.channelsById}\n      let resultsByChannel = {...state.resultsByChannel}\n      let result = analyzeBotData(data, state.channelsById, state.model)\n      if(result){\n        let channel = channelsById[result.id]\n        delete channelsById[result.id]\n        if(channel){\n          resultsByChannel[channel] = result\n        }\n        return {...state, channelsById, resultsByChannel }\n      }else{\n        return state\n      }\n    }\n    default:\n      return state\n  }\n  return state\n}","import { combineReducers } from 'redux'\nimport { merge } from 'lodash/object'\nimport * as ActionTypes from '../actions'\nimport config from './config'\nimport errors from './errors'\nimport robot from './robot'\n\nfunction router(state = { pathname: '/' }, action) {\n  switch (action.type) {\n    case ActionTypes.UPDATE_ROUTER_STATE:\n      return action.state\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  config,\n  errors,\n  router,\n  robot,\n})\n\nexport default rootReducer","import * as ActionTypes from '../actions'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ActionTypes.CONFIG_FETCH_REQUEST:\n      return {}\n    case ActionTypes.CONFIG_FETCH_FAILURE:\n      return {}\n    case ActionTypes.CONFIG_FETCH_SUCCESS:\n      return {...state, ...action.response}\n    case ActionTypes.UPDATE_DASHBOARD:\n    {\n      let {dashboard} = action\n      let interfaceRoot = {...state.interfaceRoot}\n      interfaceRoot.dashboards = [...interfaceRoot.dashboards]\n      interfaceRoot.dashboards.forEach((d, i)=>{\n        if(d.i === dashboard.i){\n          interfaceRoot.dashboards[i] = {...interfaceRoot.dashboards[i], ...dashboard}\n        }\n      })\n      return {...state, interfaceRoot}\n    }\n    case ActionTypes.DASHBOARD_UPDATE_SUCCESS:\n    {\n      let {dashboard} = action\n      let interfaceRoot = {...state.interfaceRoot}\n      interfaceRoot.dashboards = [...interfaceRoot.dashboards]\n      interfaceRoot.dashboards.forEach((d, i)=>{\n        if(d.i === dashboard.i){\n          interfaceRoot.dashboards[i] = {...interfaceRoot.dashboards[i], ...dashboard}\n        }\n      })\n      return {...state, interfaceRoot}\n    }\n    case ActionTypes.CELL_CREATE_SUCCESS:\n    {\n      let {dashboardId, cell} = action\n      let interfaceRoot = {...state.interfaceRoot}\n      interfaceRoot.dashboards = [...interfaceRoot.dashboards]\n      interfaceRoot.dashboards.forEach((d, i)=>{\n        if(d.i === dashboardId){\n          interfaceRoot.dashboards[i] = {...interfaceRoot.dashboards[i]}\n          interfaceRoot.dashboards[i].cells = [\n            ...interfaceRoot.dashboards[i].cells,\n            cell\n          ]\n        }\n      })\n      return {...state, interfaceRoot}\n    }\n    case ActionTypes.CELL_DELETE_SUCCESS:\n    {\n      let {dashboardId, cell} = action\n      let interfaceRoot = {...state.interfaceRoot}\n      interfaceRoot.dashboards = [...interfaceRoot.dashboards]\n      interfaceRoot.dashboards.forEach((d, i)=>{\n        if(d.i === dashboardId){\n          interfaceRoot.dashboards[i] = {...interfaceRoot.dashboards[i]}\n          interfaceRoot.dashboards[i].cells = interfaceRoot.dashboards[i].cells.filter(c => c.i !== cell.i)\n        }\n      })\n      return {...state, interfaceRoot}\n    }\n    default:\n      return state\n  }\n  return state\n}","import * as ActionTypes from '../actions'\n\nexport default (state = {}, action) => {\n  const {type, error, errorType} = action\n  if (type === ActionTypes.RESET_ERROR_MESSAGE) {\n    if (errorType) {\n      if (!!state[errorType]){\n        state = {...state}\n        delete state[errorType]\n      }\n    }else{\n      state = {}\n    }\n  } else if(!!error){\n    state = {...state}\n    state[type] = error\n  }\n  return state\n}","import { createStore, applyMiddleware, compose } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport createSagaMiddleware, { END } from 'redux-saga'\nimport sagaMonitor from '@redux-saga/simple-saga-monitor'\n\nimport rootReducer from './reducers'\n\n// const composeEnhancers =\n//   typeof window === 'object' &&\n//   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n//       // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n//     }) : compose;\nconst composeEnhancers = compose\n\nexport default function configureStore(initialState) {\n  // const sagaMiddleware = createSagaMiddleware({ sagaMonitor })\n  const sagaMiddleware = createSagaMiddleware()\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(\n      applyMiddleware(\n        sagaMiddleware,\n        // createLogger({})\n      ),\n    ),\n  )\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./reducers', () => {\n      const nextRootReducer = require('./reducers').default\n      store.replaceReducer(nextRootReducer)\n    })\n  }\n  store.runSaga = sagaMiddleware.run\n  store.close = () => store.dispatch(END)\n  return store\n}","import { schema, normalize } from 'normalizr'\nimport { camelizeKeys } from 'humps'\nimport has from 'lodash/has'\nimport { isEmpty } from 'lodash/isEmpty'\nimport 'isomorphic-fetch'\n\n\nfunction callGetApi(endpoint) {\n  return fetch(endpoint)\n    .then(response =>\n      response.json().then(json => ({ json, response }))\n    ).then(({ json, response }) => {\n      if (!response.ok) {\n        return Promise.reject(json)\n      }\n      return json\n    })\n    .then(\n      response => ({response}),\n      error => ({error: error.message || 'Something bad happened'})\n    )\n}\n\nfunction callPutApi(endpoint, data) {\n  return fetch(endpoint, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data)\n  })\n    .then(response =>\n      response.json().then(json => ({ json, response }))\n    ).then(({ json, response }) => {\n      if (!response.ok) {\n        return Promise.reject(json)\n      }\n      return json\n    })\n    .then(\n      response => ({response}),\n      error => ({error: error.message || 'Something bad happened'})\n    )\n}\n\nfunction callPostApi(endpoint, data) {\n  return fetch(endpoint, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data)\n  })\n    .then(response =>\n      response.json().then(json => ({ json, response }))\n    ).then(({ json, response }) => {\n      if (!response.ok) {\n        return Promise.reject(json)\n      }\n      return json\n    })\n    .then(\n      response => ({response}),\n      error => ({error: error.message || 'Something bad happened'})\n    )\n}\n\nfunction callDeleteApi(endpoint, data) {\n  return fetch(endpoint, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data)\n  })\n    .then(response =>\n      response.json().then(json => ({ json, response }))\n    ).then(({ json, response }) => {\n      if (!response.ok) {\n        return Promise.reject(json)\n      }\n      return json\n    })\n    .then(\n      response => ({response}),\n      error => ({error: error.message || 'Something bad happened'})\n    )\n}\n\n// api services\nexport const fetchConfig = () => callGetApi(`/api/config`)\nexport const updateDashboard = (dashboard) => callPutApi(`/api/dashboards/${dashboard.i}`, dashboard)\nexport const createCell = (dashboardId, cell) => callPostApi(`/api/dashboards/${dashboardId}/cells`, {...cell})\nexport const deleteCell = (dashboardId, cellId) => callDeleteApi(`/api/dashboards/${dashboardId}/cells/${cellId}`, {})\n\nexport const defaultDashboards = [\n  {\n    \"name\": \"手动操作\",\n    \"cells\": [\n      {\n        \"type\": \"JogCoordinate\",\n        \"name\": \"手动笛卡尔坐标系\",\n        \"x\": 0,\n        \"y\": 0,\n        \"w\": 3,\n        \"h\": 10\n      },\n      {\n        \"type\": \"3DView\",\n        \"name\": \"三维视图\",\n        \"x\": 3,\n        \"y\": 1,\n        \"w\": 6,\n        \"h\": 8\n      },\n      {\n        \"type\": \"JogJoint\",\n        \"name\": \"手动关节坐标系\",\n        \"x\": 9,\n        \"y\": 0,\n        \"w\": 3,\n        \"h\": 8\n      },\n      {\n        \"type\": \"ManualMotionVel\",\n        \"name\": \"速度\",\n        \"x\": 3,\n        \"y\": 0,\n        \"w\": 6,\n        \"h\": 2\n      },\n      {\n        \"type\": \"robotstatus\",\n        \"name\": \"机器人状态\",\n        \"x\": 9,\n        \"y\": 8,\n        \"w\": 3,\n        \"h\": 2\n      }\n    ]\n  },\n  {\n    \"name\": \"编程控制\",\n    \"cells\": [\n      {\n        \"type\": \"JogCoordinate\",\n        \"name\": \"编程视图\",\n        \"x\": 0,\n        \"y\": 0,\n        \"w\": 6,\n        \"h\": 10\n      },\n      {\n        \"type\": \"3DView\",\n        \"name\": \"运行视图\",\n        \"x\": 6,\n        \"y\": 0,\n        \"w\": 6,\n        \"h\": 10\n      }\n    ]\n  },\n  {\n    \"name\": \"信息监控\",\n    \"cells\": [\n      {\n        \"type\": \"Logger\",\n        \"name\": \"监控图表\",\n        \"x\": 0,\n        \"y\": 0,\n        \"w\": 3,\n        \"h\": 4\n      },\n      {\n        \"type\": \"Logger\",\n        \"name\": \"监控图表\",\n        \"x\": 3,\n        \"y\": 0,\n        \"w\": 3,\n        \"h\": 4\n      },\n      {\n        \"type\": \"Logger\",\n        \"name\": \"监控图表\",\n        \"x\": 6,\n        \"y\": 0,\n        \"w\": 3,\n        \"h\": 4\n      },\n      {\n        \"type\": \"Logger\",\n        \"name\": \"监控图表\",\n        \"x\": 9,\n        \"y\": 0,\n        \"w\": 3,\n        \"h\": 4\n      },\n      {\n        \"type\": \"Logger\",\n        \"name\": \"监控图表\",\n        \"x\": 0,\n        \"y\": 6,\n        \"w\": 3,\n        \"h\": 4\n      },\n      {\n        \"type\": \"Logger\",\n        \"name\": \"监控图表\",\n        \"x\": 3,\n        \"y\": 6,\n        \"w\": 3,\n        \"h\": 4\n      },\n      {\n        \"type\": \"Logger\",\n        \"name\": \"监控图表\",\n        \"x\": 6,\n        \"y\": 6,\n        \"w\": 3,\n        \"h\": 4\n      },\n      {\n        \"type\": \"Logger\",\n        \"name\": \"监控图表\",\n        \"x\": 9,\n        \"y\": 6,\n        \"w\": 3,\n        \"h\": 4\n      }\n    ]\n  },\n  {\n    \"name\": \"日志回放\",\n    \"cells\": [\n      {\n        \"type\": \"Logger\",\n        \"name\": \"监控图表\",\n        \"x\": 0,\n        \"y\": 0,\n        \"w\": 6,\n        \"h\": 6\n      },\n      {\n        \"type\": \"Logger\",\n        \"name\": \"监控图表\",\n        \"x\": 6,\n        \"y\": 0,\n        \"w\": 6,\n        \"h\": 6\n      },\n      {\n        \"type\": \"Logger\",\n        \"name\": \"监控图表\",\n        \"x\": 0,\n        \"y\": 8,\n        \"w\": 6,\n        \"h\": 6\n      },\n      {\n        \"type\": \"Logger\",\n        \"name\": \"监控图表\",\n        \"x\": 6,\n        \"y\": 8,\n        \"w\": 6,\n        \"h\": 6\n      }\n    ]\n  }\n]\n\n// export function* fetchDashboards() {\n//   let response = {\n//     1: {\n//       name: '手动操作',\n//       cells: {\n//         1: {type: 'JogCoordinate', name:\"手动笛卡尔坐标系\", id: 1, x: 0, y:0, w: 3, h:10},\n//         2: {type: '3DView', name:\"三维视图\", id: 2, x: 3, y:1, w:6, h:8},\n//         3: {type: 'JogJoint', name:\"手动关节坐标系\", id: 3, x: 9, y:0, w:3, h:8},\n//         4: {type: 'ManualMotionVel', name:\"速度\", id: 4, x: 3, y:0, w:6, h:2},\n//         5: {type: 'robotstatus', name:\"机器人状态\", id: 5, x: 9, y:8, w:3, h:2},\n//       }\n//     },\n//     2: {\n//       name: '编程控制',\n//       cells: {\n//         1: {type: 'JogCoordinate', id: 1, name:'编程视图', x:0, y:0, w:6, h:10},\n//         2: {type: '3DView', id: 2, name:'运行视图', x:6, y:0, w:6, h:10},\n//       }\n//     },\n//     3: {\n//       name: '信息监控',\n//       cells: {\n//         1: {type: 'Logger', id: 1, name:'监控图表', x:0, y:0, w:3, h:4},\n//         2: {type: 'Logger', id: 2, name:'监控图表', x:3, y:0, w:3, h:4},\n//         3: {type: 'Logger', id: 3, name:'监控图表', x:6, y:0, w:3, h:4},\n//         4: {type: 'Logger', id: 4, name:'监控图表', x:9, y:0, w:3, h:4},\n//         5: {type: 'Logger', id: 5, name:'监控图表', x:0, y:6, w:3, h:4},\n//         6: {type: 'Logger', id: 6, name:'监控图表', x:3, y:6, w:3, h:4},\n//         7: {type: 'Logger', id: 7, name:'监控图表', x:6, y:6, w:3, h:4},\n//         8: {type: 'Logger', id: 8, name:'监控图表', x:9, y:6, w:3, h:4},\n//       }\n//     },\n//     4: {\n//       name: '日志回放',\n//       cells: {\n//           1: {type: 'Logger', id: 1, name:'监控图表', x:0, y:0, w:6, h:6},\n//           2: {type: 'Logger', id: 2, name:'监控图表', x:6, y:0, w:6, h:6},\n//           3: {type: 'Logger', id: 3, name:'监控图表', x:0, y:8, w:6, h:6},\n//           4: {type: 'Logger', id: 4, name:'监控图表', x:6, y:8, w:6, h:6},\n//       }\n//     },\n//   }\n//   Object.keys(response).forEach(id=>{\n//     response[id] = setDefaultLayout(response[id])\n//   })\n//   return {response}\n// }\n","import * as _api from './api'\nimport { createBrowserHistory } from 'history'\n\nexport const api = _api\nexport const history = createBrowserHistory()\n","import {\n  put,\n  call,\n  fork,\n  select,\n  delay,\n  takeLatest,\n} from 'redux-saga/effects'\nimport isEmpty from 'lodash/isEmpty'\nimport { api } from '../services'\nimport * as actions from '../actions'\nimport { getConfig } from '../reducers/selectors'\nimport {getDashboardAndCells} from \"../selectors/config\";\nimport { dashboardUpdate } from \"../actions\";\nimport { cellCreate, cellDelete } from \"../actions\";\nconst { config } = actions\n\nfunction* fetchConfig() {\n  yield put( config.request() )\n  const {response, error} = yield call(api.fetchConfig)\n  if(response)\n    yield put( config.success(response) )\n  else\n    yield put( config.failure(error) )\n}\n\nfunction* loadConfig({requiredFields}) {\n  yield delay(50)\n  const config = yield select(getConfig)\n  if (isEmpty(config) || requiredFields.some(key => !config.hasOwnProperty(key))) {\n    yield call(fetchConfig)\n  }\n}\n\nfunction* updateDashboard({dashboard}){\n  // delay可以产生debounce effect\n  yield delay(500)\n  dashboard = yield select(getDashboardAndCells, dashboard.i)\n  console.log('updateDashboard after 200ms', dashboard)\n  if(!isEmpty(dashboard)){\n    yield put( dashboardUpdate.request() )\n    const {response, error} = yield call(api.updateDashboard, dashboard)\n    if(response)\n      yield put( dashboardUpdate.success(response) )\n    else\n      yield put( dashboardUpdate.failure(error) )\n  }\n}\n\nfunction* createCell({dashboardId, cell}){\n  yield delay(50)\n  yield put( cellCreate.request() )\n  const {response, error} = yield call(api.createCell, dashboardId, cell)\n  if(response)\n    yield put( cellCreate.success(dashboardId, response) )\n  else\n    yield put( cellCreate.failure(error) )\n}\n\nfunction* deleteCell({dashboardId, cellId}){\n  yield delay(50)\n  yield put( cellDelete.request(dashboardId, cellId) )\n  const {response, error} = yield call(api.deleteCell, dashboardId, cellId)\n  if(response)\n    yield put( cellDelete.success(dashboardId, response) )\n  else\n    yield put( cellDelete.failure(error) )\n}\n\nfunction* watchUpdateDashboard() {\n  yield  takeLatest(actions.UPDATE_DASHBOARD, updateDashboard)\n}\n\nfunction* watchCreateCell() {\n  yield takeLatest(actions.CREATE_CELL, createCell)\n}\n\nfunction* watchLoadConfig() {\n  yield takeLatest(actions.LOAD_CONFIG, loadConfig)\n}\n\nfunction* watchDeleteCell() {\n  yield takeLatest(actions.DELETE_CELL, deleteCell)\n}\n\nexport default [\n  fork(watchLoadConfig),\n  fork(watchUpdateDashboard),\n  fork(watchCreateCell),\n  fork(watchDeleteCell)\n]\n","import * as actions from \"../actions\";\nimport { delay, take, put, call, fork, select, all, race } from 'redux-saga/effects'\nimport { eventChannel, END} from 'redux-saga'\nimport {getModel} from \"../reducers/selectors\";\n\nlet CMD_CODE_LIST = {}\nlet CMD_CODE_RETURN_LIST = {}\nlet dataMap_dataIndex=[]\nlet dataMap_chartID=[]\nlet dataSet=[]\nlet dataSetCount=[]\nlet dataSetLength=[]\n\nfunction sendCmd(ws, str) {\n  let strArray=str.split(\"&\");\n  if (strArray.length>3){\n    let cmd_id=parseInt(strArray[0]);\n    let cmd_option=parseInt((strArray[1]));\n    let cmd_code=parseInt((strArray[2]));\n\n    // console.log(\"res-1:\"+cmd_code);\n    let res_2=parseInt((strArray[3]));\n    let res_3=parseInt((strArray[4]));\n\n    let mes_length=strArray[5].length;\n    let buffer=new ArrayBuffer(40+mes_length);\n    let headView=new DataView(buffer);\n    headView.setInt32(0,mes_length,true);\n    headView.setInt32(4,cmd_id,true);\n    headView.setInt32(8,cmd_option,true);\n    headView.setFloat64(16,cmd_code,true);\n    // console.log(\"cmd_code:\"+headView.getFloat64(16,true));\n    headView.setInt32(24,res_2,true);\n    headView.setInt32(32,res_3,true);\n    for (let i=0;i<mes_length;i++){\n      headView.setUint8(40+i,strArray[5].charCodeAt(i));\n    }\n    ws.send(headView.buffer);\n  }\n}\n\n\n//可以处理中文\nfunction utf8ArrayToStr(array) {\n  let out, i, len, c\n  let char2, char3\n\n  out = \"\"\n  len = array.length\n  i = 0\n  while(i < len) {\n    c = array[i++]\n    switch(c >> 4)\n    {\n      case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\n      // 0xxxxxxx\n      out += String.fromCharCode(c)\n      break\n      case 12: case 13:\n      // 110x xxxx   10xx xxxx\n      char2 = array[i++]\n      out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F))\n      break\n      case 14:\n        // 1110 xxxx  10xx xxxx  10xx xxxx\n        char2 = array[i++]\n        char3 = array[i++]\n        out += String.fromCharCode(((c & 0x0F) << 12) |\n          ((char2 & 0x3F) << 6) |\n          ((char3 & 0x3F) << 0))\n        break;\n    }\n  }\n\n  return out\n}\n\nfunction analyzeBinaryDataReturn(buffer) {\n  let dataView=new DataView(buffer)\n  let pq=\"\"\n  for(let i=0;i<(buffer.byteLength-40)/8;i++){\n    let data=dataView.getFloat64(40+i*8,true).toString();\n    if (i!==0){\n      pq+=\",\"+data;\n    }\n    if (i===0){\n      pq+=data;\n    }\n  }\n  return pq;\n}\n\nfunction createWebSocketConnection(url) {\n  return new Promise((resolve, reject) => {\n    const socket = new WebSocket(url || window.location.origin.replace('https','wss').replace('http', 'ws'))\n    socket.onopen = function () {\n      socket.binaryType='arraybuffer'\n      resolve(socket);\n    };\n    socket.onerror = function (evt) {\n      reject(evt);\n    }\n  });\n}\n\nfunction createSocketChannel(socket) {\n  return eventChannel(emit => {\n    //如果race已经被cancel, 消息发不出去\n    socket.onmessage = (event) => {\n      if(event.data instanceof ArrayBuffer){\n        emit({data:event.data, type: actions.CMD_RESPONSE})\n      }\n    };\n    socket.onclose = () => {\n      emit(actions.wsDisconnected())\n    };\n    socket.onerror = (error) => {\n      emit(actions.wsError(error.message))\n    }\n    const unsubscribe = () => {\n      socket.onmessage = null\n      socket.onerror = null\n    };\n    return unsubscribe\n  })\n}\n\nfunction* internalListener(ws) {\n  while (true) {\n    const {cmd, id} = yield take(actions.SEND_CMD);\n    switch (ws.readyState) {\n      case WebSocket.CONNECTING:\n        break;\n      case WebSocket.OPEN:\n        if(cmd === 'get'){\n          sendCmd(ws, \"0&1&\" + id + \"&0&0&\" + cmd);\n        }else{\n          console.log(\"sendCmd\",cmd)\n          sendCmd(ws, \"1&1&\" + id + \"&0&0&\" + cmd);\n        }\n      case  WebSocket.CLOSING:\n        break;\n      case WebSocket.CLOSED:\n        break;\n    }\n  }\n}\n\nfunction* externalListener(channel){\n  try{\n    while (true) {\n      const action = yield take(channel)\n      yield put(action)\n    }\n  }finally{\n    console.log('message channel closed')\n  }\n}\nfunction* reconnect(url) {\n  yield delay(5000)\n  yield put(actions.startWebsocket(url))\n}\n\nfunction* websocketSaga() {\n  let socket\n  let socketChannel\n  let cancel\n  while(true){\n    const {url} = yield take(actions.START_WEBSOCKET);\n    try {\n      socket = yield call(createWebSocketConnection, url);\n      socketChannel = yield call(createSocketChannel, socket);\n      yield  put(actions.wsConnected())\n      const {cancel:_cancel}= yield race({\n        internal: call(internalListener, socket),\n        external: call(externalListener, socketChannel),\n        cancel: take(actions.STOP_WEBSOCKET)\n      });\n      cancel = _cancel\n    } catch (error) {\n      console.log(error)\n      yield put(actions.wsError(error.message))\n    } finally {\n      if(socket){\n        socket.close();\n        socket = null\n      }\n      yield put(actions.wsDisconnected())\n      if(socketChannel){\n        socketChannel.close();\n        socketChannel = null\n      }\n      if (!cancel) {\n        yield fork(reconnect, url)\n      }\n    }\n  }\n}\n\n\nexport default [\n  fork(websocketSaga)\n]","import { take, put, call, fork, select, all } from 'redux-saga/effects'\nimport { history } from '../services'\nimport * as actions from '../actions'\nimport configSaga from './config'\nimport websocketSaga from './websocket'\n\n// resuable fetch Subroutine\n// entity :  dashboards | dashboards\n// apiFn  : api.fetchDashboards | api.fetchRepo | ...\n// id     : login | fullName\n// url    : next page url. If not provided will use pass id to apiFn\nfunction* fetchEntity(entity, apiFn, id, url) {\n  yield put( entity.request(id) )\n  const {response, error} = yield call(apiFn, url || id)\n  if(response)\n    yield put( entity.success(id, response) )\n  else\n    yield put( entity.failure(id, error) )\n}\n\nfunction* fetchEntities(entities, apiFn, url) {\n  yield put( entities.request() )\n  const {response, error} = yield call(apiFn, url)\n  if(response)\n    yield put( entities.success(response) )\n  else\n    yield put( entities.failure(error) )\n}\n\n// trigger router navigation via history\nfunction* watchNavigate() {\n  while(true) {\n    const {pathname} = yield take(actions.NAVIGATE)\n    yield history.push(pathname)\n  }\n}\n\nexport default function* root() {\n  yield all([\n    ...configSaga,\n    ...websocketSaga,\n    fork(watchNavigate),\n  ])\n}","import React from 'react'\nimport { render } from 'react-dom'\nimport * as serviceWorker from './serviceWorker';\n\nimport { Router, Route } from 'react-router'\nimport { Provider } from 'react-redux'\nimport App from './containers/App'\nimport configureStore from './store'\nimport rootSaga from './sagas'\nimport {history} from \"./services\";\nimport ConfigProvider from 'antd/lib/config-provider'\nimport './style/index.less'\n\nconst store = configureStore()\nstore.runSaga(rootSaga)\n\nrender(\n  <Provider store={store}>\n    <ConfigProvider prefixCls={'rchmi'}>\n    <Router history={history}>\n      <Route  path=\"/\" component={App}/>\n    </Router>\n    </ConfigProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}